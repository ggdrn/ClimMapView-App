{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./extractLengthList","data":{"isAsync":false}},{"name":"../util","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.extractFont = extractFont;\n  exports.setTSpan = setTSpan;\n  exports.default = extractText;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"react\"));\n\n  var _extractLengthList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./extractLengthList\"));\n\n  var _util = _$$_REQUIRE(_dependencyMap[5], \"../util\");\n\n  var _jsxFileName = \"/home/garcia/Documentos/React-Native-Projects/Climmapview/node_modules/react-native-svg/lib/extract/extractText.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var fontRegExp = /^\\s*((?:(?:normal|bold|italic)\\s+)*)(?:(\\d+(?:\\.\\d+)?(?:%|px|em|pt|pc|mm|cm|in]))*(?:\\s*\\/.*?)?\\s+)?\\s*\"?([^\"]*)/i;\n  var fontFamilyPrefix = /^[\\s\"']*/;\n  var fontFamilySuffix = /[\\s\"']*$/;\n  var commaReg = /\\s*,\\s*/g;\n  var cachedFontObjectsFromString = {};\n\n  function extractSingleFontFamily(fontFamilyString) {\n    return fontFamilyString ? fontFamilyString.split(commaReg)[0].replace(fontFamilyPrefix, '').replace(fontFamilySuffix, '') : null;\n  }\n\n  function parseFontString(font) {\n    if (cachedFontObjectsFromString.hasOwnProperty(font)) {\n      return cachedFontObjectsFromString[font];\n    }\n\n    var match = fontRegExp.exec(font);\n\n    if (!match) {\n      cachedFontObjectsFromString[font] = null;\n      return null;\n    }\n\n    var isBold = /bold/.exec(match[1]);\n    var isItalic = /italic/.exec(match[1]);\n    cachedFontObjectsFromString[font] = {\n      fontSize: match[2] || 12,\n      fontWeight: isBold ? 'bold' : 'normal',\n      fontStyle: isItalic ? 'italic' : 'normal',\n      fontFamily: extractSingleFontFamily(match[3])\n    };\n    return cachedFontObjectsFromString[font];\n  }\n\n  function extractFont(props) {\n    var fontData = props.fontData,\n        fontStyle = props.fontStyle,\n        fontVariant = props.fontVariant,\n        fontWeight = props.fontWeight,\n        fontStretch = props.fontStretch,\n        fontSize = props.fontSize,\n        fontFamily = props.fontFamily,\n        textAnchor = props.textAnchor,\n        textDecoration = props.textDecoration,\n        letterSpacing = props.letterSpacing,\n        wordSpacing = props.wordSpacing,\n        kerning = props.kerning,\n        fontFeatureSettings = props.fontFeatureSettings,\n        fontVariantLigatures = props.fontVariantLigatures,\n        fontVariationSettings = props.fontVariationSettings,\n        font = props.font;\n    var ownedFont = (0, _util.pickNotNil)({\n      fontData: fontData,\n      fontStyle: fontStyle,\n      fontVariant: fontVariant,\n      fontWeight: fontWeight,\n      fontStretch: fontStretch,\n      fontSize: fontSize,\n      fontFamily: extractSingleFontFamily(fontFamily),\n      textAnchor: textAnchor,\n      textDecoration: textDecoration,\n      letterSpacing: letterSpacing,\n      wordSpacing: wordSpacing,\n      kerning: kerning,\n      fontFeatureSettings: fontFeatureSettings,\n      fontVariantLigatures: fontVariantLigatures,\n      fontVariationSettings: fontVariationSettings\n    });\n    var baseFont = typeof font === 'string' ? parseFontString(font) : font;\n    return _objectSpread({}, baseFont, {}, ownedFont);\n  }\n\n  var TSpan;\n\n  function setTSpan(TSpanImplementation) {\n    TSpan = TSpanImplementation;\n  }\n\n  function getChild(child) {\n    if (typeof child === 'string' || typeof child === 'number') {\n      return _react.default.createElement(TSpan, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        }\n      }, String(child));\n    } else {\n      return child;\n    }\n  }\n\n  function extractText(props, container) {\n    var x = props.x,\n        y = props.y,\n        dx = props.dx,\n        dy = props.dy,\n        rotate = props.rotate,\n        children = props.children,\n        inlineSize = props.inlineSize,\n        baselineShift = props.baselineShift,\n        verticalAlign = props.verticalAlign,\n        alignmentBaseline = props.alignmentBaseline;\n    var textChildren = typeof children === 'string' || typeof children === 'number' ? container ? _react.default.createElement(TSpan, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      }\n    }, String(children)) : null : _react.Children.count(children) > 1 || Array.isArray(children) ? _react.Children.map(children, getChild) : children;\n    return {\n      content: textChildren === null ? String(children) : null,\n      children: textChildren,\n      inlineSize: inlineSize,\n      baselineShift: baselineShift,\n      verticalAlign: verticalAlign,\n      alignmentBaseline: alignmentBaseline,\n      font: extractFont(props),\n      x: (0, _extractLengthList.default)(x),\n      y: (0, _extractLengthList.default)(y),\n      dx: (0, _extractLengthList.default)(dx),\n      dy: (0, _extractLengthList.default)(dy),\n      rotate: (0, _extractLengthList.default)(rotate)\n    };\n  }\n});","map":[[15,0,1,0],[17,0,2,0],[19,0,3,0],[27,0,5,0],[27,6,5,6,"fontRegExp"],[27,16,5,16],[27,19,5,19],[27,134,5,0],[28,0,6,0],[28,6,6,6,"fontFamilyPrefix"],[28,22,6,22],[28,25,6,25],[28,35,6,0],[29,0,7,0],[29,6,7,6,"fontFamilySuffix"],[29,22,7,22],[29,25,7,25],[29,35,7,0],[30,0,8,0],[30,6,8,6,"commaReg"],[30,14,8,14],[30,17,8,17],[30,27,8,0],[31,0,10,0],[31,6,10,6,"cachedFontObjectsFromString"],[31,33,10,33],[31,36,10,36],[31,38,10,0],[33,0,12,0],[33,11,12,9,"extractSingleFontFamily"],[33,34,12,0],[33,35,12,33,"fontFamilyString"],[33,51,12,0],[33,53,12,51],[34,0,16,2],[34,11,16,9,"fontFamilyString"],[34,27,16,25],[34,30,17,6,"fontFamilyString"],[34,46,17,22],[34,47,18,9,"split"],[34,52,17,6],[34,53,18,15,"commaReg"],[34,61,17,6],[34,63,18,25],[34,64,17,6],[34,66,19,9,"replace"],[34,73,17,6],[34,74,19,17,"fontFamilyPrefix"],[34,90,17,6],[34,92,19,35],[34,94,17,6],[34,96,20,9,"replace"],[34,103,17,6],[34,104,20,17,"fontFamilySuffix"],[34,120,17,6],[34,122,20,35],[34,124,17,6],[34,125,16,25],[34,128,21,6],[34,132,16,2],[35,0,22,1],[37,0,24,0],[37,11,24,9,"parseFontString"],[37,26,24,0],[37,27,24,25,"font"],[37,31,24,0],[37,33,24,31],[38,0,25,2],[38,8,25,6,"cachedFontObjectsFromString"],[38,35,25,33],[38,36,25,34,"hasOwnProperty"],[38,50,25,6],[38,51,25,49,"font"],[38,55,25,6],[38,56,25,2],[38,58,25,56],[39,0,26,4],[39,13,26,11,"cachedFontObjectsFromString"],[39,40,26,38],[39,41,26,39,"font"],[39,45,26,38],[39,46,26,4],[40,0,27,3],[42,0,28,2],[42,8,28,8,"match"],[42,13,28,13],[42,16,28,16,"fontRegExp"],[42,26,28,26],[42,27,28,27,"exec"],[42,31,28,16],[42,32,28,32,"font"],[42,36,28,16],[42,37,28,2],[44,0,29,2],[44,8,29,6],[44,9,29,7,"match"],[44,14,29,2],[44,16,29,14],[45,0,30,4,"cachedFontObjectsFromString"],[45,6,30,4,"cachedFontObjectsFromString"],[45,33,30,31],[45,34,30,32,"font"],[45,38,30,31],[45,39,30,4],[45,42,30,40],[45,46,30,4],[46,0,31,4],[46,13,31,11],[46,17,31,4],[47,0,32,3],[49,0,33,2],[49,8,33,8,"isBold"],[49,14,33,14],[49,17,33,17],[49,24,33,24,"exec"],[49,28,33,17],[49,29,33,29,"match"],[49,34,33,34],[49,35,33,35],[49,36,33,34],[49,37,33,17],[49,38,33,2],[50,0,34,2],[50,8,34,8,"isItalic"],[50,16,34,16],[50,19,34,19],[50,28,34,28,"exec"],[50,32,34,19],[50,33,34,33,"match"],[50,38,34,38],[50,39,34,39],[50,40,34,38],[50,41,34,19],[50,42,34,2],[51,0,35,2,"cachedFontObjectsFromString"],[51,4,35,2,"cachedFontObjectsFromString"],[51,31,35,29],[51,32,35,30,"font"],[51,36,35,29],[51,37,35,2],[51,40,35,38],[52,0,36,4,"fontSize"],[52,6,36,4,"fontSize"],[52,14,36,12],[52,16,36,14,"match"],[52,21,36,19],[52,22,36,20],[52,23,36,19],[52,24,36,14],[52,28,36,26],[52,30,35,38],[53,0,37,4,"fontWeight"],[53,6,37,4,"fontWeight"],[53,16,37,14],[53,18,37,16,"isBold"],[53,24,37,22],[53,27,37,25],[53,33,37,22],[53,36,37,34],[53,44,35,38],[54,0,38,4,"fontStyle"],[54,6,38,4,"fontStyle"],[54,15,38,13],[54,17,38,15,"isItalic"],[54,25,38,23],[54,28,38,26],[54,36,38,23],[54,39,38,37],[54,47,35,38],[55,0,39,4,"fontFamily"],[55,6,39,4,"fontFamily"],[55,16,39,14],[55,18,39,16,"extractSingleFontFamily"],[55,41,39,39],[55,42,39,40,"match"],[55,47,39,45],[55,48,39,46],[55,49,39,45],[55,50,39,39],[56,0,35,38],[56,5,35,2],[57,0,41,2],[57,11,41,9,"cachedFontObjectsFromString"],[57,38,41,36],[57,39,41,37,"font"],[57,43,41,36],[57,44,41,2],[58,0,42,1],[60,0,44,7],[60,11,44,16,"extractFont"],[60,22,44,7],[60,23,44,28,"props"],[60,28,44,7],[60,30,44,35],[61,0,44,35],[61,8,46,4,"fontData"],[61,16,44,35],[61,19,62,6,"props"],[61,24,44,35],[61,25,46,4,"fontData"],[61,33,44,35],[62,0,44,35],[62,8,47,4,"fontStyle"],[62,17,44,35],[62,20,62,6,"props"],[62,25,44,35],[62,26,47,4,"fontStyle"],[62,35,44,35],[63,0,44,35],[63,8,48,4,"fontVariant"],[63,19,44,35],[63,22,62,6,"props"],[63,27,44,35],[63,28,48,4,"fontVariant"],[63,39,44,35],[64,0,44,35],[64,8,49,4,"fontWeight"],[64,18,44,35],[64,21,62,6,"props"],[64,26,44,35],[64,27,49,4,"fontWeight"],[64,37,44,35],[65,0,44,35],[65,8,50,4,"fontStretch"],[65,19,44,35],[65,22,62,6,"props"],[65,27,44,35],[65,28,50,4,"fontStretch"],[65,39,44,35],[66,0,44,35],[66,8,51,4,"fontSize"],[66,16,44,35],[66,19,62,6,"props"],[66,24,44,35],[66,25,51,4,"fontSize"],[66,33,44,35],[67,0,44,35],[67,8,52,4,"fontFamily"],[67,18,44,35],[67,21,62,6,"props"],[67,26,44,35],[67,27,52,4,"fontFamily"],[67,37,44,35],[68,0,44,35],[68,8,53,4,"textAnchor"],[68,18,44,35],[68,21,62,6,"props"],[68,26,44,35],[68,27,53,4,"textAnchor"],[68,37,44,35],[69,0,44,35],[69,8,54,4,"textDecoration"],[69,22,44,35],[69,25,62,6,"props"],[69,30,44,35],[69,31,54,4,"textDecoration"],[69,45,44,35],[70,0,44,35],[70,8,55,4,"letterSpacing"],[70,21,44,35],[70,24,62,6,"props"],[70,29,44,35],[70,30,55,4,"letterSpacing"],[70,43,44,35],[71,0,44,35],[71,8,56,4,"wordSpacing"],[71,19,44,35],[71,22,62,6,"props"],[71,27,44,35],[71,28,56,4,"wordSpacing"],[71,39,44,35],[72,0,44,35],[72,8,57,4,"kerning"],[72,15,44,35],[72,18,62,6,"props"],[72,23,44,35],[72,24,57,4,"kerning"],[72,31,44,35],[73,0,44,35],[73,8,58,4,"fontFeatureSettings"],[73,27,44,35],[73,30,62,6,"props"],[73,35,44,35],[73,36,58,4,"fontFeatureSettings"],[73,55,44,35],[74,0,44,35],[74,8,59,4,"fontVariantLigatures"],[74,28,44,35],[74,31,62,6,"props"],[74,36,44,35],[74,37,59,4,"fontVariantLigatures"],[74,57,44,35],[75,0,44,35],[75,8,60,4,"fontVariationSettings"],[75,29,44,35],[75,32,62,6,"props"],[75,37,44,35],[75,38,60,4,"fontVariationSettings"],[75,59,44,35],[76,0,44,35],[76,8,61,4,"font"],[76,12,44,35],[76,15,62,6,"props"],[76,20,44,35],[76,21,61,4,"font"],[76,25,44,35],[77,0,64,2],[77,8,64,8,"ownedFont"],[77,17,64,17],[77,20,64,20],[77,42,64,31],[78,0,65,4,"fontData"],[78,6,65,4,"fontData"],[78,14,65,12],[78,16,65,4,"fontData"],[78,24,64,31],[79,0,66,4,"fontStyle"],[79,6,66,4,"fontStyle"],[79,15,66,13],[79,17,66,4,"fontStyle"],[79,26,64,31],[80,0,67,4,"fontVariant"],[80,6,67,4,"fontVariant"],[80,17,67,15],[80,19,67,4,"fontVariant"],[80,30,64,31],[81,0,68,4,"fontWeight"],[81,6,68,4,"fontWeight"],[81,16,68,14],[81,18,68,4,"fontWeight"],[81,28,64,31],[82,0,69,4,"fontStretch"],[82,6,69,4,"fontStretch"],[82,17,69,15],[82,19,69,4,"fontStretch"],[82,30,64,31],[83,0,70,4,"fontSize"],[83,6,70,4,"fontSize"],[83,14,70,12],[83,16,70,4,"fontSize"],[83,24,64,31],[84,0,71,4,"fontFamily"],[84,6,71,4,"fontFamily"],[84,16,71,14],[84,18,71,16,"extractSingleFontFamily"],[84,41,71,39],[84,42,71,40,"fontFamily"],[84,52,71,39],[84,53,64,31],[85,0,72,4,"textAnchor"],[85,6,72,4,"textAnchor"],[85,16,72,14],[85,18,72,4,"textAnchor"],[85,28,64,31],[86,0,73,4,"textDecoration"],[86,6,73,4,"textDecoration"],[86,20,73,18],[86,22,73,4,"textDecoration"],[86,36,64,31],[87,0,74,4,"letterSpacing"],[87,6,74,4,"letterSpacing"],[87,19,74,17],[87,21,74,4,"letterSpacing"],[87,34,64,31],[88,0,75,4,"wordSpacing"],[88,6,75,4,"wordSpacing"],[88,17,75,15],[88,19,75,4,"wordSpacing"],[88,30,64,31],[89,0,76,4,"kerning"],[89,6,76,4,"kerning"],[89,13,76,11],[89,15,76,4,"kerning"],[89,22,64,31],[90,0,77,4,"fontFeatureSettings"],[90,6,77,4,"fontFeatureSettings"],[90,25,77,23],[90,27,77,4,"fontFeatureSettings"],[90,46,64,31],[91,0,78,4,"fontVariantLigatures"],[91,6,78,4,"fontVariantLigatures"],[91,26,78,24],[91,28,78,4,"fontVariantLigatures"],[91,48,64,31],[92,0,79,4,"fontVariationSettings"],[92,6,79,4,"fontVariationSettings"],[92,27,79,25],[92,29,79,4,"fontVariationSettings"],[93,0,64,31],[93,5,64,20],[93,6,64,2],[94,0,82,2],[94,8,82,8,"baseFont"],[94,16,82,16],[94,19,82,19],[94,26,82,26,"font"],[94,30,82,19],[94,35,82,35],[94,43,82,19],[94,46,82,46,"parseFontString"],[94,61,82,61],[94,62,82,62,"font"],[94,66,82,61],[94,67,82,19],[94,70,82,70,"font"],[94,74,82,2],[95,0,84,2],[95,29,84,14,"baseFont"],[95,37,84,2],[95,43,84,27,"ownedFont"],[95,52,84,2],[96,0,85,1],[98,0,87,0],[98,6,87,4,"TSpan"],[98,11,87,0],[100,0,89,7],[100,11,89,16,"setTSpan"],[100,19,89,7],[100,20,89,25,"TSpanImplementation"],[100,39,89,7],[100,41,89,46],[101,0,90,2,"TSpan"],[101,4,90,2,"TSpan"],[101,9,90,7],[101,12,90,10,"TSpanImplementation"],[101,31,90,2],[102,0,91,1],[104,0,93,0],[104,11,93,9,"getChild"],[104,19,93,0],[104,20,93,18,"child"],[104,25,93,0],[104,27,93,25],[105,0,94,2],[105,8,94,6],[105,15,94,13,"child"],[105,20,94,6],[105,25,94,23],[105,33,94,6],[105,37,94,35],[105,44,94,42,"child"],[105,49,94,35],[105,54,94,52],[105,62,94,2],[105,64,94,62],[106,0,95,4],[106,13,95,11],[106,42,95,12],[106,47,95,11],[107,0,95,11],[108,0,95,11],[109,0,95,11],[110,0,95,11],[111,0,95,11],[111,9,95,19,"String"],[111,15,95,25],[111,16,95,26,"child"],[111,21,95,25],[111,22,95,11],[111,23,95,4],[112,0,96,3],[112,5,94,2],[112,11,96,9],[113,0,97,4],[113,13,97,11,"child"],[113,18,97,4],[114,0,98,3],[115,0,99,1],[117,0,101,15],[117,11,101,24,"extractText"],[117,22,101,15],[117,23,101,36,"props"],[117,28,101,15],[117,30,101,43,"container"],[117,39,101,15],[117,41,101,54],[118,0,101,54],[118,8,103,4,"x"],[118,9,101,54],[118,12,113,6,"props"],[118,17,101,54],[118,18,103,4,"x"],[118,19,101,54],[119,0,101,54],[119,8,104,4,"y"],[119,9,101,54],[119,12,113,6,"props"],[119,17,101,54],[119,18,104,4,"y"],[119,19,101,54],[120,0,101,54],[120,8,105,4,"dx"],[120,10,101,54],[120,13,113,6,"props"],[120,18,101,54],[120,19,105,4,"dx"],[120,21,101,54],[121,0,101,54],[121,8,106,4,"dy"],[121,10,101,54],[121,13,113,6,"props"],[121,18,101,54],[121,19,106,4,"dy"],[121,21,101,54],[122,0,101,54],[122,8,107,4,"rotate"],[122,14,101,54],[122,17,113,6,"props"],[122,22,101,54],[122,23,107,4,"rotate"],[122,29,101,54],[123,0,101,54],[123,8,108,4,"children"],[123,16,101,54],[123,19,113,6,"props"],[123,24,101,54],[123,25,108,4,"children"],[123,33,101,54],[124,0,101,54],[124,8,109,4,"inlineSize"],[124,18,101,54],[124,21,113,6,"props"],[124,26,101,54],[124,27,109,4,"inlineSize"],[124,37,101,54],[125,0,101,54],[125,8,110,4,"baselineShift"],[125,21,101,54],[125,24,113,6,"props"],[125,29,101,54],[125,30,110,4,"baselineShift"],[125,43,101,54],[126,0,101,54],[126,8,111,4,"verticalAlign"],[126,21,101,54],[126,24,113,6,"props"],[126,29,101,54],[126,30,111,4,"verticalAlign"],[126,43,101,54],[127,0,101,54],[127,8,112,4,"alignmentBaseline"],[127,25,101,54],[127,28,113,6,"props"],[127,33,101,54],[127,34,112,4,"alignmentBaseline"],[127,51,101,54],[128,0,115,2],[128,8,115,8,"textChildren"],[128,20,115,20],[128,23,116,4],[128,30,116,11,"children"],[128,38,116,4],[128,43,116,24],[128,51,116,4],[128,55,116,36],[128,62,116,43,"children"],[128,70,116,36],[128,75,116,56],[128,83,116,4],[128,86,117,6,"container"],[128,95,117,15],[128,98,118,8],[128,127,118,9],[128,132,118,8],[129,0,118,8],[130,0,118,8],[131,0,118,8],[132,0,118,8],[133,0,118,8],[133,7,118,16,"String"],[133,13,118,22],[133,14,118,23,"children"],[133,22,118,22],[133,23,118,8],[133,24,117,15],[133,27,119,10],[133,31,116,4],[133,34,120,8,"Children"],[133,50,120,17,"count"],[133,55,120,8],[133,56,120,23,"children"],[133,64,120,8],[133,68,120,35],[133,69,120,8],[133,73,120,40,"Array"],[133,78,120,45],[133,79,120,46,"isArray"],[133,86,120,40],[133,87,120,54,"children"],[133,95,120,40],[133,96,120,8],[133,99,121,6,"Children"],[133,115,121,15,"map"],[133,118,121,6],[133,119,121,19,"children"],[133,127,121,6],[133,129,121,29,"getChild"],[133,137,121,6],[133,138,120,8],[133,141,123,6,"children"],[133,149,115,2],[134,0,126,2],[134,11,126,9],[135,0,127,4,"content"],[135,6,127,4,"content"],[135,13,127,11],[135,15,127,13,"textChildren"],[135,27,127,25],[135,32,127,30],[135,36,127,13],[135,39,127,37,"String"],[135,45,127,43],[135,46,127,44,"children"],[135,54,127,43],[135,55,127,13],[135,58,127,56],[135,62,126,9],[136,0,128,4,"children"],[136,6,128,4,"children"],[136,14,128,12],[136,16,128,14,"textChildren"],[136,28,126,9],[137,0,129,4,"inlineSize"],[137,6,129,4,"inlineSize"],[137,16,129,14],[137,18,129,4,"inlineSize"],[137,28,126,9],[138,0,130,4,"baselineShift"],[138,6,130,4,"baselineShift"],[138,19,130,17],[138,21,130,4,"baselineShift"],[138,34,126,9],[139,0,131,4,"verticalAlign"],[139,6,131,4,"verticalAlign"],[139,19,131,17],[139,21,131,4,"verticalAlign"],[139,34,126,9],[140,0,132,4,"alignmentBaseline"],[140,6,132,4,"alignmentBaseline"],[140,23,132,21],[140,25,132,4,"alignmentBaseline"],[140,42,126,9],[141,0,133,4,"font"],[141,6,133,4,"font"],[141,10,133,8],[141,12,133,10,"extractFont"],[141,23,133,21],[141,24,133,22,"props"],[141,29,133,21],[141,30,126,9],[142,0,134,4,"x"],[142,6,134,4,"x"],[142,7,134,5],[142,9,134,7],[142,41,134,25,"x"],[142,42,134,7],[142,43,126,9],[143,0,135,4,"y"],[143,6,135,4,"y"],[143,7,135,5],[143,9,135,7],[143,41,135,25,"y"],[143,42,135,7],[143,43,126,9],[144,0,136,4,"dx"],[144,6,136,4,"dx"],[144,8,136,6],[144,10,136,8],[144,42,136,26,"dx"],[144,44,136,8],[144,45,126,9],[145,0,137,4,"dy"],[145,6,137,4,"dy"],[145,8,137,6],[145,10,137,8],[145,42,137,26,"dy"],[145,44,137,8],[145,45,126,9],[146,0,138,4,"rotate"],[146,6,138,4,"rotate"],[146,12,138,10],[146,14,138,12],[146,46,138,30,"rotate"],[146,52,138,12],[147,0,126,9],[147,5,126,2],[148,0,140,1]]},"type":"js/module"}]}