{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"d3-array","data":{"isAsync":false}},{"name":"d3-scale","data":{"isAsync":false}},{"name":"d3-shape","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"react-native-svg","data":{"isAsync":false}},{"name":"./animated-path","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./../../react-transform-hmr/lib/index.js\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"prop-types\"));\n\n  var array = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12], \"d3-array\"));\n\n  var scale = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[13], \"d3-scale\"));\n\n  var shape = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[14], \"d3-shape\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[15], \"react-native\");\n\n  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[16], \"react-native-svg\");\n\n  var _animatedPath = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"./animated-path\"));\n\n  var _jsxFileName = \"/home/garcia/Documentos/React-Native-Projects/Climmapview/node_modules/react-native-svg-charts/src/stacked-area-chart.js\";\n  var _components = {\n    AreaStack: {\n      displayName: \"AreaStack\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"node_modules/react-native-svg-charts/src/stacked-area-chart.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var AreaStack = function (_PureComponent) {\n    (0, _inherits2.default)(AreaStack, _PureComponent);\n\n    function AreaStack() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, AreaStack);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(AreaStack)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        height: 0,\n        width: 0\n      };\n      return _this;\n    }\n\n    (0, _createClass2.default)(AreaStack, [{\n      key: \"_onLayout\",\n      value: function _onLayout(event) {\n        var _event$nativeEvent$la = event.nativeEvent.layout,\n            height = _event$nativeEvent$la.height,\n            width = _event$nativeEvent$la.width;\n        this.setState({\n          height: height,\n          width: width\n        });\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var _this$props = this.props,\n            data = _this$props.data,\n            keys = _this$props.keys,\n            colors = _this$props.colors,\n            animate = _this$props.animate,\n            animationDuration = _this$props.animationDuration,\n            style = _this$props.style,\n            curve = _this$props.curve,\n            numberOfTicks = _this$props.numberOfTicks,\n            _this$props$contentIn = _this$props.contentInset,\n            _this$props$contentIn2 = _this$props$contentIn.top,\n            top = _this$props$contentIn2 === void 0 ? 0 : _this$props$contentIn2,\n            _this$props$contentIn3 = _this$props$contentIn.bottom,\n            bottom = _this$props$contentIn3 === void 0 ? 0 : _this$props$contentIn3,\n            _this$props$contentIn4 = _this$props$contentIn.left,\n            left = _this$props$contentIn4 === void 0 ? 0 : _this$props$contentIn4,\n            _this$props$contentIn5 = _this$props$contentIn.right,\n            right = _this$props$contentIn5 === void 0 ? 0 : _this$props$contentIn5,\n            gridMin = _this$props.gridMin,\n            gridMax = _this$props.gridMax,\n            children = _this$props.children,\n            offset = _this$props.offset,\n            order = _this$props.order,\n            svgs = _this$props.svgs,\n            xAccessor = _this$props.xAccessor,\n            xScale = _this$props.xScale,\n            clampY = _this$props.clampY,\n            clampX = _this$props.clampX;\n        var _this$state = this.state,\n            height = _this$state.height,\n            width = _this$state.width;\n\n        if (data.length === 0) {\n          return _react.default.createElement(_reactNative.View, {\n            style: style,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            }\n          });\n        }\n\n        var series = shape.stack().keys(keys).order(order).offset(offset)(data);\n        var yValues = array.merge(array.merge(series));\n        var xValues = data.map(function (item, index) {\n          return xAccessor({\n            item: item,\n            index: index\n          });\n        });\n        var yExtent = array.extent([].concat((0, _toConsumableArray2.default)(yValues), [gridMin, gridMax]));\n        var xExtent = array.extent(xValues);\n        var _this$props2 = this.props,\n            _this$props2$yMin = _this$props2.yMin,\n            yMin = _this$props2$yMin === void 0 ? yExtent[0] : _this$props2$yMin,\n            _this$props2$yMax = _this$props2.yMax,\n            yMax = _this$props2$yMax === void 0 ? yExtent[1] : _this$props2$yMax,\n            _this$props2$xMin = _this$props2.xMin,\n            xMin = _this$props2$xMin === void 0 ? xExtent[0] : _this$props2$xMin,\n            _this$props2$xMax = _this$props2.xMax,\n            xMax = _this$props2$xMax === void 0 ? xExtent[1] : _this$props2$xMax;\n        var y = scale.scaleLinear().domain([yMin, yMax]).range([height - bottom, top]).clamp(clampY);\n        var x = xScale().domain([xMin, xMax]).range([left, width - right]).clamp(clampX);\n        var ticks = y.ticks(numberOfTicks);\n        var areas = series.map(function (serie, index) {\n          var path = shape.area().x(function (d, index) {\n            return x(xAccessor({\n              item: d.data,\n              index: index\n            }));\n          }).y0(function (d) {\n            return y(d[0]);\n          }).y1(function (d) {\n            return y(d[1]);\n          }).curve(curve)(data.map(function (_, index) {\n            return serie[index];\n          }));\n          return {\n            path: path,\n            key: keys[index],\n            color: colors[index]\n          };\n        });\n        var extraProps = {\n          x: x,\n          y: y,\n          width: width,\n          height: height,\n          ticks: ticks,\n          areas: areas\n        };\n        return _react.default.createElement(_reactNative.View, {\n          style: style,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: {\n            flex: 1\n          },\n          onLayout: function onLayout(event) {\n            return _this2._onLayout(event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          }\n        }, height > 0 && width > 0 && _react.default.createElement(_reactNativeSvg.Svg, {\n          style: {\n            height: height,\n            width: width\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          }\n        }, _react.default.Children.map(children, function (child) {\n          if (child && child.props.belowChart) {\n            return _react.default.cloneElement(child, extraProps);\n          }\n\n          return null;\n        }), areas.map(function (area, index) {\n          return _react.default.createElement(_animatedPath.default, (0, _extends2.default)({\n            key: area.key,\n            fill: area.color\n          }, svgs[index], {\n            animate: animate,\n            animationDuration: animationDuration,\n            d: area.path,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            }\n          }));\n        }), _react.default.Children.map(children, function (child) {\n          if (child && !child.props.belowChart) {\n            return _react.default.cloneElement(child, extraProps);\n          }\n\n          return null;\n        }))));\n      }\n    }], [{\n      key: \"extractDataPoints\",\n      value: function extractDataPoints(data, keys) {\n        var order = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : shape.stackOrderNone;\n        var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : shape.stackOffsetNone;\n        var series = shape.stack().keys(keys).order(order).offset(offset)(data);\n        return array.merge(array.merge(series));\n      }\n    }]);\n    return AreaStack;\n  }(_react.PureComponent);\n\n  AreaStack = _wrapComponent(\"AreaStack\")(AreaStack);\n  AreaStack.propTypes = {\n    data: _propTypes.default.arrayOf(_propTypes.default.object).isRequired,\n    keys: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,\n    colors: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,\n    svgs: _propTypes.default.arrayOf(_propTypes.default.object),\n    offset: _propTypes.default.func,\n    order: _propTypes.default.func,\n    style: _propTypes.default.any,\n    animate: _propTypes.default.bool,\n    animationDuration: _propTypes.default.number,\n    contentInset: _propTypes.default.shape({\n      top: _propTypes.default.number,\n      left: _propTypes.default.number,\n      right: _propTypes.default.number,\n      bottom: _propTypes.default.number\n    }),\n    numberOfTicks: _propTypes.default.number,\n    showGrid: _propTypes.default.bool,\n    xScale: _propTypes.default.func,\n    xAccessor: _propTypes.default.func,\n    yMin: _propTypes.default.any,\n    yMax: _propTypes.default.any,\n    xMin: _propTypes.default.any,\n    xMax: _propTypes.default.any,\n    clampX: _propTypes.default.bool,\n    clampY: _propTypes.default.bool\n  };\n  AreaStack.defaultProps = {\n    curve: shape.curveLinear,\n    offset: shape.stackOffsetNone,\n    order: shape.stackOrderNone,\n    svgs: [],\n    strokeWidth: 2,\n    contentInset: {},\n    numberOfTicks: 10,\n    showGrid: true,\n    xScale: scale.scaleLinear,\n    xAccessor: function xAccessor(_ref) {\n      var index = _ref.index;\n      return index;\n    }\n  };\n  var _default2 = AreaStack;\n  exports.default = _default2;\n});","map":[[25,0,5,0],[29,0,1,0],[31,0,2,0],[33,0,3,0],[35,0,4,0],[37,0,6,0],[39,0,7,0],[41,0,8,0],[63,6,10,6,"AreaStack"],[63,15],[78,12,22,4,"state"],[78,17],[78,20,22,12],[79,0,23,8,"height"],[79,8,23,8,"height"],[79,14,23,14],[79,16,23,16],[79,17,22,12],[80,0,24,8,"width"],[80,8,24,8,"width"],[80,13,24,13],[80,15,24,15],[81,0,22,12],[81,7],[87,32,27,14,"event"],[87,37],[87,39,27,21],[88,0,27,21],[88,36,32,12,"event"],[88,41,27,21],[88,42,29,12,"nativeEvent"],[88,53,27,21],[88,54,30,16,"layout"],[88,60,27,21],[89,0,27,21],[89,12,30,26,"height"],[89,18,27,21],[89,43,30,26,"height"],[89,49,27,21],[90,0,27,21],[90,12,30,34,"width"],[90,17,27,21],[90,42,30,34,"width"],[90,47,27,21],[91,0,33,8],[91,13,33,13,"setState"],[91,21,33,8],[91,22,33,22],[92,0,33,24,"height"],[92,10,33,24,"height"],[92,16,33,30],[92,18,33,24,"height"],[92,24,33,22],[93,0,33,32,"width"],[93,10,33,32,"width"],[93,15,33,37],[93,17,33,32,"width"],[94,0,33,22],[94,9,33,8],[95,0,34,5],[98,31,36,13],[99,0,36,13],[101,0,36,13],[101,26,57,12],[101,31,57,17,"props"],[101,36,36,13],[102,0,36,13],[102,12,38,12,"data"],[102,16,36,13],[102,31,38,12,"data"],[102,35,36,13],[103,0,36,13],[103,12,39,12,"keys"],[103,16,36,13],[103,31,39,12,"keys"],[103,35,36,13],[104,0,36,13],[104,12,40,12,"colors"],[104,18,36,13],[104,33,40,12,"colors"],[104,39,36,13],[105,0,36,13],[105,12,41,12,"animate"],[105,19,36,13],[105,34,41,12,"animate"],[105,41,36,13],[106,0,36,13],[106,12,42,12,"animationDuration"],[106,29,36,13],[106,44,42,12,"animationDuration"],[106,61,36,13],[107,0,36,13],[107,12,43,12,"style"],[107,17,36,13],[107,32,43,12,"style"],[107,37,36,13],[108,0,36,13],[108,12,44,12,"curve"],[108,17,36,13],[108,32,44,12,"curve"],[108,37,36,13],[109,0,36,13],[109,12,45,12,"numberOfTicks"],[109,25,36,13],[109,40,45,12,"numberOfTicks"],[109,53,36,13],[110,0,36,13],[110,48,46,12,"contentInset"],[110,60,36,13],[111,0,36,13],[111,59,46,28,"top"],[111,62,36,13],[112,0,36,13],[112,12,46,28,"top"],[112,15,36,13],[112,54,46,34],[112,55,36,13],[113,0,36,13],[113,59,46,37,"bottom"],[113,65,36,13],[114,0,36,13],[114,12,46,37,"bottom"],[114,18,36,13],[114,57,46,46],[114,58,36,13],[115,0,36,13],[115,59,46,49,"left"],[115,63,36,13],[116,0,36,13],[116,12,46,49,"left"],[116,16,36,13],[116,55,46,56],[116,56,36,13],[117,0,36,13],[117,59,46,59,"right"],[117,64,36,13],[118,0,36,13],[118,12,46,59,"right"],[118,17,36,13],[118,56,46,67],[118,57,36,13],[119,0,36,13],[119,12,47,12,"gridMin"],[119,19,36,13],[119,34,47,12,"gridMin"],[119,41,36,13],[120,0,36,13],[120,12,48,12,"gridMax"],[120,19,36,13],[120,34,48,12,"gridMax"],[120,41,36,13],[121,0,36,13],[121,12,49,12,"children"],[121,20,36,13],[121,35,49,12,"children"],[121,43,36,13],[122,0,36,13],[122,12,50,12,"offset"],[122,18,36,13],[122,33,50,12,"offset"],[122,39,36,13],[123,0,36,13],[123,12,51,12,"order"],[123,17,36,13],[123,32,51,12,"order"],[123,37,36,13],[124,0,36,13],[124,12,52,12,"svgs"],[124,16,36,13],[124,31,52,12,"svgs"],[124,35,36,13],[125,0,36,13],[125,12,53,12,"xAccessor"],[125,21,36,13],[125,36,53,12,"xAccessor"],[125,45,36,13],[126,0,36,13],[126,12,54,12,"xScale"],[126,18,36,13],[126,33,54,12,"xScale"],[126,39,36,13],[127,0,36,13],[127,12,55,12,"clampY"],[127,18,36,13],[127,33,55,12,"clampY"],[127,39,36,13],[128,0,36,13],[128,12,56,12,"clampX"],[128,18,36,13],[128,33,56,12,"clampX"],[128,39,36,13],[129,0,36,13],[129,26,59,34],[129,31,59,39,"state"],[129,36,36,13],[130,0,36,13],[130,12,59,16,"height"],[130,18,36,13],[130,33,59,16,"height"],[130,39,36,13],[131,0,36,13],[131,12,59,24,"width"],[131,17,36,13],[131,32,59,24,"width"],[131,37,36,13],[133,0,61,8],[133,12,61,12,"data"],[133,16,61,16],[133,17,61,17,"length"],[133,23,61,12],[133,28,61,28],[133,29,61,8],[133,31,61,31],[134,0,62,12],[134,17,62,19],[134,46,62,20],[134,63,62,19],[135,0,62,25],[135,12,62,25],[135,17,62,30],[135,19,62,32,"style"],[135,24,62,19],[136,0,62,19],[137,0,62,19],[138,0,62,19],[139,0,62,19],[140,0,62,19],[140,12,62,12],[141,0,63,9],[143,0,65,8],[143,12,65,14,"series"],[143,18,65,20],[143,21,65,23,"shape"],[143,26,65,28],[143,27,66,13,"stack"],[143,32,65,23],[143,35,67,13,"keys"],[143,39,65,23],[143,40,67,18,"keys"],[143,44,65,23],[143,46,68,13,"order"],[143,51,65,23],[143,52,68,19,"order"],[143,57,65,23],[143,59,69,13,"offset"],[143,65,65,23],[143,66,69,20,"offset"],[143,72,65,23],[143,74,69,28,"data"],[143,78,65,23],[143,79,65,8],[144,0,72,8],[144,12,72,14,"yValues"],[144,19,72,21],[144,22,72,24,"array"],[144,27,72,29],[144,28,72,30,"merge"],[144,33,72,24],[144,34,72,36,"array"],[144,39,72,41],[144,40,72,42,"merge"],[144,45,72,36],[144,46,72,48,"series"],[144,52,72,36],[144,53,72,24],[144,54,72,8],[145,0,73,8],[145,12,73,14,"xValues"],[145,19,73,21],[145,22,73,24,"data"],[145,26,73,28],[145,27,73,29,"map"],[145,30,73,24],[145,31,73,33],[145,41,73,34,"item"],[145,45,73,33],[145,47,73,40,"index"],[145,52,73,33],[146,0,73,33],[146,17,73,50,"xAccessor"],[146,26,73,59],[146,27,73,60],[147,0,73,62,"item"],[147,12,73,62,"item"],[147,16,73,66],[147,18,73,62,"item"],[147,22,73,60],[148,0,73,68,"index"],[148,12,73,68,"index"],[148,17,73,73],[148,19,73,68,"index"],[149,0,73,60],[149,11,73,59],[149,12,73,33],[150,0,73,33],[150,9,73,24],[150,10,73,8],[151,0,75,8],[151,12,75,14,"yExtent"],[151,19,75,21],[151,22,75,24,"array"],[151,27,75,29],[151,28,75,30,"extent"],[151,34,75,24],[151,78,75,41,"yValues"],[151,85,75,24],[151,89,75,50,"gridMin"],[151,96,75,24],[151,98,75,59,"gridMax"],[151,105,75,24],[151,108,75,8],[152,0,76,8],[152,12,76,14,"xExtent"],[152,19,76,21],[152,22,76,24,"array"],[152,27,76,29],[152,28,76,30,"extent"],[152,34,76,24],[152,35,76,37,"xValues"],[152,42,76,24],[152,43,76,8],[153,0,36,13],[153,27,78,95],[153,32,78,100,"props"],[153,37,36,13],[154,0,36,13],[154,45,78,16,"yMin"],[154,49,36,13],[155,0,36,13],[155,12,78,16,"yMin"],[155,16,36,13],[155,50,78,23,"yExtent"],[155,57,78,30],[155,58,78,31],[155,59,78,30],[155,60,36,13],[156,0,36,13],[156,45,78,35,"yMax"],[156,49,36,13],[157,0,36,13],[157,12,78,35,"yMax"],[157,16,36,13],[157,50,78,42,"yExtent"],[157,57,78,49],[157,58,78,50],[157,59,78,49],[157,60,36,13],[158,0,36,13],[158,45,78,54,"xMin"],[158,49,36,13],[159,0,36,13],[159,12,78,54,"xMin"],[159,16,36,13],[159,50,78,61,"xExtent"],[159,57,78,68],[159,58,78,69],[159,59,78,68],[159,60,36,13],[160,0,36,13],[160,45,78,73,"xMax"],[160,49,36,13],[161,0,36,13],[161,12,78,73,"xMax"],[161,16,36,13],[161,50,78,80,"xExtent"],[161,57,78,87],[161,58,78,88],[161,59,78,87],[161,60,36,13],[162,0,81,8],[162,12,81,14,"y"],[162,13,81,15],[162,16,81,18,"scale"],[162,21,81,23],[162,22,82,13,"scaleLinear"],[162,33,81,18],[162,36,83,13,"domain"],[162,42,81,18],[162,43,83,20],[162,44,83,21,"yMin"],[162,48,83,20],[162,50,83,27,"yMax"],[162,54,83,20],[162,55,81,18],[162,57,84,13,"range"],[162,62,81,18],[162,63,84,19],[162,64,84,20,"height"],[162,70,84,26],[162,73,84,29,"bottom"],[162,79,84,19],[162,81,84,37,"top"],[162,84,84,19],[162,85,81,18],[162,87,85,13,"clamp"],[162,92,81,18],[162,93,85,19,"clampY"],[162,99,81,18],[162,100,81,8],[163,0,87,8],[163,12,87,14,"x"],[163,13,87,15],[163,16,87,18,"xScale"],[163,22,87,24],[163,25,88,13,"domain"],[163,31,87,18],[163,32,88,20],[163,33,88,21,"xMin"],[163,37,88,20],[163,39,88,27,"xMax"],[163,43,88,20],[163,44,87,18],[163,46,89,13,"range"],[163,51,87,18],[163,52,89,19],[163,53,89,20,"left"],[163,57,89,19],[163,59,89,26,"width"],[163,64,89,31],[163,67,89,34,"right"],[163,72,89,19],[163,73,87,18],[163,75,90,13,"clamp"],[163,80,87,18],[163,81,90,19,"clampX"],[163,87,87,18],[163,88,87,8],[164,0,92,8],[164,12,92,14,"ticks"],[164,17,92,19],[164,20,92,22,"y"],[164,21,92,23],[164,22,92,24,"ticks"],[164,27,92,22],[164,28,92,30,"numberOfTicks"],[164,41,92,22],[164,42,92,8],[165,0,94,8],[165,12,94,14,"areas"],[165,17,94,19],[165,20,94,22,"series"],[165,26,94,28],[165,27,94,29,"map"],[165,30,94,22],[165,31,94,33],[165,41,94,34,"serie"],[165,46,94,33],[165,48,94,41,"index"],[165,53,94,33],[165,55,94,51],[166,0,95,12],[166,14,95,18,"path"],[166,18,95,22],[166,21,95,25,"shape"],[166,26,95,30],[166,27,96,17,"area"],[166,31,95,25],[166,34,97,17,"x"],[166,35,95,25],[166,36,97,19],[166,46,97,20,"d"],[166,47,97,19],[166,49,97,23,"index"],[166,54,97,19],[167,0,97,19],[167,19,97,33,"x"],[167,20,97,34],[167,21,97,35,"xAccessor"],[167,30,97,44],[167,31,97,45],[168,0,97,47,"item"],[168,14,97,47,"item"],[168,18,97,51],[168,20,97,53,"d"],[168,21,97,54],[168,22,97,55,"data"],[168,26,97,45],[169,0,97,61,"index"],[169,14,97,61,"index"],[169,19,97,66],[169,21,97,61,"index"],[170,0,97,45],[170,13,97,44],[170,14,97,34],[170,15,97,19],[171,0,97,19],[171,11,95,25],[171,13,98,17,"y0"],[171,15,95,25],[171,16,98,20],[171,26,98,21,"d"],[171,27,98,20],[172,0,98,20],[172,19,98,27,"y"],[172,20,98,28],[172,21,98,29,"d"],[172,22,98,30],[172,23,98,31],[172,24,98,30],[172,25,98,28],[172,26,98,20],[173,0,98,20],[173,11,95,25],[173,13,99,17,"y1"],[173,15,95,25],[173,16,99,20],[173,26,99,21,"d"],[173,27,99,20],[174,0,99,20],[174,19,99,27,"y"],[174,20,99,28],[174,21,99,29,"d"],[174,22,99,30],[174,23,99,31],[174,24,99,30],[174,25,99,28],[174,26,99,20],[175,0,99,20],[175,11,95,25],[175,13,100,17,"curve"],[175,18,95,25],[175,19,100,23,"curve"],[175,24,95,25],[175,26,100,30,"data"],[175,30,100,34],[175,31,100,35,"map"],[175,34,100,30],[175,35,100,39],[175,45,100,40,"_"],[175,46,100,39],[175,48,100,43,"index"],[175,53,100,39],[176,0,100,39],[176,19,100,53,"serie"],[176,24,100,58],[176,25,100,59,"index"],[176,30,100,58],[176,31,100,39],[177,0,100,39],[177,11,100,30],[177,12,95,25],[177,13,95,12],[178,0,102,12],[178,17,102,19],[179,0,103,16,"path"],[179,12,103,16,"path"],[179,16,103,20],[179,18,103,16,"path"],[179,22,102,19],[180,0,104,16,"key"],[180,12,104,16,"key"],[180,15,104,19],[180,17,104,21,"keys"],[180,21,104,25],[180,22,104,26,"index"],[180,27,104,25],[180,28,102,19],[181,0,105,16,"color"],[181,12,105,16,"color"],[181,17,105,21],[181,19,105,23,"colors"],[181,25,105,29],[181,26,105,30,"index"],[181,31,105,29],[182,0,102,19],[182,11,102,12],[183,0,107,9],[183,9,94,22],[183,10,94,8],[184,0,109,8],[184,12,109,14,"extraProps"],[184,22,109,24],[184,25,109,27],[185,0,110,12,"x"],[185,10,110,12,"x"],[185,11,110,13],[185,13,110,12,"x"],[185,14,109,27],[186,0,111,12,"y"],[186,10,111,12,"y"],[186,11,111,13],[186,13,111,12,"y"],[186,14,109,27],[187,0,112,12,"width"],[187,10,112,12,"width"],[187,15,112,17],[187,17,112,12,"width"],[187,22,109,27],[188,0,113,12,"height"],[188,10,113,12,"height"],[188,16,113,18],[188,18,113,12,"height"],[188,24,109,27],[189,0,114,12,"ticks"],[189,10,114,12,"ticks"],[189,15,114,17],[189,17,114,12,"ticks"],[189,22,109,27],[190,0,115,12,"areas"],[190,10,115,12,"areas"],[190,15,115,17],[190,17,115,12,"areas"],[191,0,109,27],[191,9,109,8],[192,0,118,8],[192,15,119,12],[192,44,119,13],[192,61,119,12],[193,0,119,18],[193,10,119,18],[193,15,119,23],[193,17,119,25,"style"],[193,22,119,12],[194,0,119,12],[195,0,119,12],[196,0,119,12],[197,0,119,12],[198,0,119,12],[198,11,120,16],[198,40,120,17],[198,57,120,16],[199,0,120,22],[199,10,120,22],[199,15,120,27],[199,17,120,29],[200,0,120,31,"flex"],[200,12,120,31,"flex"],[200,16,120,35],[200,18,120,37],[201,0,120,29],[201,11,120,16],[202,0,120,42],[202,10,120,42],[202,18,120,50],[202,20,120,52],[202,38,120,53,"event"],[202,43,120,52],[203,0,120,52],[203,19,120,63],[203,25,120,67],[203,26,120,68,"_onLayout"],[203,35,120,63],[203,36,120,78,"event"],[203,41,120,63],[203,42,120,52],[204,0,120,52],[204,11,120,16],[205,0,120,16],[206,0,120,16],[207,0,120,16],[208,0,120,16],[209,0,120,16],[209,11,121,21,"height"],[209,17,121,27],[209,20,121,30],[209,21,121,21],[209,25,121,35,"width"],[209,30,121,40],[209,33,121,43],[209,34,121,21],[209,38,122,24],[209,67,122,25],[209,86,122,24],[210,0,122,29],[210,10,122,29],[210,15,122,34],[210,17,122,36],[211,0,122,38,"height"],[211,12,122,38,"height"],[211,18,122,44],[211,20,122,38,"height"],[211,26,122,36],[212,0,122,46,"width"],[212,12,122,46,"width"],[212,17,122,51],[212,19,122,46,"width"],[213,0,122,36],[213,11,122,24],[214,0,122,24],[215,0,122,24],[216,0,122,24],[217,0,122,24],[218,0,122,24],[218,11,123,29,"React"],[218,26,123,35,"Children"],[218,34,123,29],[218,35,123,44,"map"],[218,38,123,29],[218,39,123,48,"children"],[218,47,123,29],[218,49,123,58],[218,59,123,59,"child"],[218,64,123,58],[218,66,123,69],[219,0,124,32],[219,14,124,36,"child"],[219,19,124,41],[219,23,124,45,"child"],[219,28,124,50],[219,29,124,51,"props"],[219,34,124,45],[219,35,124,57,"belowChart"],[219,45,124,32],[219,47,124,69],[220,0,125,36],[220,19,125,43,"React"],[220,34,125,49,"cloneElement"],[220,46,125,43],[220,47,125,62,"child"],[220,52,125,43],[220,54,125,69,"extraProps"],[220,64,125,43],[220,65,125,36],[221,0,126,33],[223,0,127,32],[223,17,127,39],[223,21,127,32],[224,0,128,29],[224,9,123,29],[224,10,122,24],[224,12,129,29,"areas"],[224,17,129,34],[224,18,129,35,"map"],[224,21,129,29],[224,22,129,39],[224,32,129,40,"area"],[224,36,129,39],[224,38,129,46,"index"],[224,43,129,39],[225,0,129,39],[225,17,130,32],[225,46,130,33],[225,67,130,32],[226,0,131,36],[226,12,131,36],[226,15,131,39],[226,17,131,41,"area"],[226,21,131,45],[226,22,131,46,"key"],[226,25,130,32],[227,0,132,36],[227,12,132,36],[227,16,132,40],[227,18,132,42,"area"],[227,22,132,46],[227,23,132,47,"color"],[228,0,130,32],[228,13,133,40,"svgs"],[228,17,133,44],[228,18,133,45,"index"],[228,23,133,44],[228,24,130,32],[229,0,134,36],[229,12,134,36],[229,19,134,43],[229,21,134,45,"animate"],[229,28,130,32],[230,0,135,36],[230,12,135,36],[230,29,135,53],[230,31,135,55,"animationDuration"],[230,48,130,32],[231,0,136,36],[231,12,136,36],[231,13,136,37],[231,15,136,39,"area"],[231,19,136,43],[231,20,136,44,"path"],[231,24,130,32],[232,0,130,32],[233,0,130,32],[234,0,130,32],[235,0,130,32],[236,0,130,32],[236,13,129,39],[237,0,129,39],[237,9,129,29],[237,10,122,24],[237,12,139,29,"React"],[237,27,139,35,"Children"],[237,35,139,29],[237,36,139,44,"map"],[237,39,139,29],[237,40,139,48,"children"],[237,48,139,29],[237,50,139,58],[237,60,139,59,"child"],[237,65,139,58],[237,67,139,69],[238,0,140,32],[238,14,140,36,"child"],[238,19,140,41],[238,23,140,45],[238,24,140,46,"child"],[238,29,140,51],[238,30,140,52,"props"],[238,35,140,46],[238,36,140,58,"belowChart"],[238,46,140,32],[238,48,140,70],[239,0,141,36],[239,19,141,43,"React"],[239,34,141,49,"cloneElement"],[239,46,141,43],[239,47,141,62,"child"],[239,52,141,43],[239,54,141,69,"extraProps"],[239,64,141,43],[239,65,141,36],[240,0,142,33],[242,0,143,32],[242,17,143,39],[242,21,143,32],[243,0,144,29],[243,9,139,29],[243,10,122,24],[243,11,120,16],[243,12,119,12],[243,13,118,8],[244,0,150,5],[247,40,11,29,"data"],[247,44],[247,46,11,35,"keys"],[247,50],[247,52,11,103],[248,0,11,103],[248,12,11,41,"order"],[248,17,11,103],[248,88,11,49,"shape"],[248,93,11,54],[248,94,11,55,"stackOrderNone"],[248,108,11,103],[249,0,11,103],[249,12,11,71,"offset"],[249,18,11,103],[249,89,11,80,"shape"],[249,94,11,85],[249,95,11,86,"stackOffsetNone"],[249,110,11,103],[250,0,12,8],[250,12,12,14,"series"],[250,18,12,20],[250,21,12,23,"shape"],[250,26,12,28],[250,27,13,13,"stack"],[250,32,12,23],[250,35,14,13,"keys"],[250,39,12,23],[250,40,14,18,"keys"],[250,44,12,23],[250,46,15,13,"order"],[250,51,12,23],[250,52,15,19,"order"],[250,57,12,23],[250,59,16,13,"offset"],[250,65,12,23],[250,66,16,20,"offset"],[250,72,12,23],[250,74,16,28,"data"],[250,78,12,23],[250,79,12,8],[251,0,19,8],[251,15,19,15,"array"],[251,20,19,20],[251,21,19,21,"merge"],[251,26,19,15],[251,27,19,27,"array"],[251,32,19,32],[251,33,19,33,"merge"],[251,38,19,27],[251,39,19,39,"series"],[251,45,19,27],[251,46,19,15],[251,47,19,8],[252,0,20,5],[255,4,10,24,"PureComponent"],[255,24],[258,0,153,0,"AreaStack"],[258,2,153,0,"AreaStack"],[258,11,153,9],[258,12,153,10,"propTypes"],[258,21,153,0],[258,24,153,22],[259,0,154,4,"data"],[259,4,154,4,"data"],[259,8,154,8],[259,10,154,10,"PropTypes"],[259,29,154,20,"arrayOf"],[259,36,154,10],[259,37,154,28,"PropTypes"],[259,56,154,38,"object"],[259,62,154,10],[259,64,154,46,"isRequired"],[259,74,153,22],[260,0,155,4,"keys"],[260,4,155,4,"keys"],[260,8,155,8],[260,10,155,10,"PropTypes"],[260,29,155,20,"arrayOf"],[260,36,155,10],[260,37,155,28,"PropTypes"],[260,56,155,38,"string"],[260,62,155,10],[260,64,155,46,"isRequired"],[260,74,153,22],[261,0,156,4,"colors"],[261,4,156,4,"colors"],[261,10,156,10],[261,12,156,12,"PropTypes"],[261,31,156,22,"arrayOf"],[261,38,156,12],[261,39,156,30,"PropTypes"],[261,58,156,40,"string"],[261,64,156,12],[261,66,156,48,"isRequired"],[261,76,153,22],[262,0,157,4,"svgs"],[262,4,157,4,"svgs"],[262,8,157,8],[262,10,157,10,"PropTypes"],[262,29,157,20,"arrayOf"],[262,36,157,10],[262,37,157,28,"PropTypes"],[262,56,157,38,"object"],[262,62,157,10],[262,63,153,22],[263,0,158,4,"offset"],[263,4,158,4,"offset"],[263,10,158,10],[263,12,158,12,"PropTypes"],[263,31,158,22,"func"],[263,35,153,22],[264,0,159,4,"order"],[264,4,159,4,"order"],[264,9,159,9],[264,11,159,11,"PropTypes"],[264,30,159,21,"func"],[264,34,153,22],[265,0,160,4,"style"],[265,4,160,4,"style"],[265,9,160,9],[265,11,160,11,"PropTypes"],[265,30,160,21,"any"],[265,33,153,22],[266,0,161,4,"animate"],[266,4,161,4,"animate"],[266,11,161,11],[266,13,161,13,"PropTypes"],[266,32,161,23,"bool"],[266,36,153,22],[267,0,162,4,"animationDuration"],[267,4,162,4,"animationDuration"],[267,21,162,21],[267,23,162,23,"PropTypes"],[267,42,162,33,"number"],[267,48,153,22],[268,0,163,4,"contentInset"],[268,4,163,4,"contentInset"],[268,16,163,16],[268,18,163,18,"PropTypes"],[268,37,163,28,"shape"],[268,42,163,18],[268,43,163,34],[269,0,164,8,"top"],[269,6,164,8,"top"],[269,9,164,11],[269,11,164,13,"PropTypes"],[269,30,164,23,"number"],[269,36,163,34],[270,0,165,8,"left"],[270,6,165,8,"left"],[270,10,165,12],[270,12,165,14,"PropTypes"],[270,31,165,24,"number"],[270,37,163,34],[271,0,166,8,"right"],[271,6,166,8,"right"],[271,11,166,13],[271,13,166,15,"PropTypes"],[271,32,166,25,"number"],[271,38,163,34],[272,0,167,8,"bottom"],[272,6,167,8,"bottom"],[272,12,167,14],[272,14,167,16,"PropTypes"],[272,33,167,26,"number"],[273,0,163,34],[273,5,163,18],[273,6,153,22],[274,0,169,4,"numberOfTicks"],[274,4,169,4,"numberOfTicks"],[274,17,169,17],[274,19,169,19,"PropTypes"],[274,38,169,29,"number"],[274,44,153,22],[275,0,170,4,"showGrid"],[275,4,170,4,"showGrid"],[275,12,170,12],[275,14,170,14,"PropTypes"],[275,33,170,24,"bool"],[275,37,153,22],[276,0,171,4,"xScale"],[276,4,171,4,"xScale"],[276,10,171,10],[276,12,171,12,"PropTypes"],[276,31,171,22,"func"],[276,35,153,22],[277,0,172,4,"xAccessor"],[277,4,172,4,"xAccessor"],[277,13,172,13],[277,15,172,15,"PropTypes"],[277,34,172,25,"func"],[277,38,153,22],[278,0,174,4,"yMin"],[278,4,174,4,"yMin"],[278,8,174,8],[278,10,174,10,"PropTypes"],[278,29,174,20,"any"],[278,32,153,22],[279,0,175,4,"yMax"],[279,4,175,4,"yMax"],[279,8,175,8],[279,10,175,10,"PropTypes"],[279,29,175,20,"any"],[279,32,153,22],[280,0,176,4,"xMin"],[280,4,176,4,"xMin"],[280,8,176,8],[280,10,176,10,"PropTypes"],[280,29,176,20,"any"],[280,32,153,22],[281,0,177,4,"xMax"],[281,4,177,4,"xMax"],[281,8,177,8],[281,10,177,10,"PropTypes"],[281,29,177,20,"any"],[281,32,153,22],[282,0,178,4,"clampX"],[282,4,178,4,"clampX"],[282,10,178,10],[282,12,178,12,"PropTypes"],[282,31,178,22,"bool"],[282,35,153,22],[283,0,179,4,"clampY"],[283,4,179,4,"clampY"],[283,10,179,10],[283,12,179,12,"PropTypes"],[283,31,179,22,"bool"],[284,0,153,22],[284,3,153,0],[285,0,182,0,"AreaStack"],[285,2,182,0,"AreaStack"],[285,11,182,9],[285,12,182,10,"defaultProps"],[285,24,182,0],[285,27,182,25],[286,0,183,4,"curve"],[286,4,183,4,"curve"],[286,9,183,9],[286,11,183,11,"shape"],[286,16,183,16],[286,17,183,17,"curveLinear"],[286,28,182,25],[287,0,184,4,"offset"],[287,4,184,4,"offset"],[287,10,184,10],[287,12,184,12,"shape"],[287,17,184,17],[287,18,184,18,"stackOffsetNone"],[287,33,182,25],[288,0,185,4,"order"],[288,4,185,4,"order"],[288,9,185,9],[288,11,185,11,"shape"],[288,16,185,16],[288,17,185,17,"stackOrderNone"],[288,31,182,25],[289,0,186,4,"svgs"],[289,4,186,4,"svgs"],[289,8,186,8],[289,10,186,10],[289,12,182,25],[290,0,187,4,"strokeWidth"],[290,4,187,4,"strokeWidth"],[290,15,187,15],[290,17,187,17],[290,18,182,25],[291,0,188,4,"contentInset"],[291,4,188,4,"contentInset"],[291,16,188,16],[291,18,188,18],[291,20,182,25],[292,0,189,4,"numberOfTicks"],[292,4,189,4,"numberOfTicks"],[292,17,189,17],[292,19,189,19],[292,21,182,25],[293,0,190,4,"showGrid"],[293,4,190,4,"showGrid"],[293,12,190,12],[293,14,190,14],[293,18,182,25],[294,0,191,4,"xScale"],[294,4,191,4,"xScale"],[294,10,191,10],[294,12,191,12,"scale"],[294,17,191,17],[294,18,191,18,"scaleLinear"],[294,29,182,25],[295,0,192,4,"xAccessor"],[295,4,192,4,"xAccessor"],[295,13,192,13],[295,15,192,15],[296,0,192,15],[296,10,192,18,"index"],[296,15,192,15],[296,23,192,18,"index"],[296,28,192,15],[297,0,192,15],[297,13,192,30,"index"],[297,18,192,15],[298,0,192,15],[299,0,182,25],[299,3,182,0],[300,18,195,15,"AreaStack"],[300,27]]},"type":"js/module"}]}