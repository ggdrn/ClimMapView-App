{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/assertThisInitialized","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./MapMarker","data":{"isAsync":false}},{"name":"./MapPolyline","data":{"isAsync":false}},{"name":"./MapPolygon","data":{"isAsync":false}},{"name":"./MapCircle","data":{"isAsync":false}},{"name":"./MapCallout","data":{"isAsync":false}},{"name":"./MapCalloutSubview","data":{"isAsync":false}},{"name":"./MapOverlay","data":{"isAsync":false}},{"name":"./MapUrlTile","data":{"isAsync":false}},{"name":"./MapWMSTile","data":{"isAsync":false}},{"name":"./MapLocalTile","data":{"isAsync":false}},{"name":"./AnimatedRegion","data":{"isAsync":false}},{"name":"./decorateMapComponent","data":{"isAsync":false}},{"name":"./ProviderConstants","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.ProviderPropType = exports.Animated = exports.MAP_TYPES = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/assertThisInitialized\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"@babel/runtime/helpers/inherits\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"./../../../react-transform-hmr/lib/index.js\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[15], \"react-native\");\n\n  var _MapMarker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16], \"./MapMarker\"));\n\n  var _MapPolyline = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"./MapPolyline\"));\n\n  var _MapPolygon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18], \"./MapPolygon\"));\n\n  var _MapCircle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19], \"./MapCircle\"));\n\n  var _MapCallout = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20], \"./MapCallout\"));\n\n  var _MapCalloutSubview = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21], \"./MapCalloutSubview\"));\n\n  var _MapOverlay = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22], \"./MapOverlay\"));\n\n  var _MapUrlTile = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23], \"./MapUrlTile\"));\n\n  var _MapWMSTile = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24], \"./MapWMSTile\"));\n\n  var _MapLocalTile = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25], \"./MapLocalTile\"));\n\n  var _AnimatedRegion = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26], \"./AnimatedRegion\"));\n\n  var _decorateMapComponent = _$$_REQUIRE(_dependencyMap[27], \"./decorateMapComponent\");\n\n  var ProviderConstants = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[28], \"./ProviderConstants\"));\n\n  var _jsxFileName = \"/home/garcia/Documentos/React-Native-Projects/Climmapview/node_modules/react-native-maps/lib/components/MapView.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var _components = {\n    MapView: {\n      displayName: \"MapView\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"node_modules/react-native-maps/lib/components/MapView.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var MAP_TYPES = {\n    STANDARD: 'standard',\n    SATELLITE: 'satellite',\n    HYBRID: 'hybrid',\n    TERRAIN: 'terrain',\n    NONE: 'none',\n    MUTEDSTANDARD: 'mutedStandard'\n  };\n  exports.MAP_TYPES = MAP_TYPES;\n  var GOOGLE_MAPS_ONLY_TYPES = [MAP_TYPES.TERRAIN, MAP_TYPES.NONE];\n  var viewConfig = {\n    uiViewClassName: 'AIR<provider>Map',\n    validAttributes: {\n      region: true\n    }\n  };\n\n  var CameraShape = _propTypes.default.shape({\n    center: _propTypes.default.shape({\n      latitude: _propTypes.default.number.isRequired,\n      longitude: _propTypes.default.number.isRequired\n    }),\n    pitch: _propTypes.default.number.isRequired,\n    heading: _propTypes.default.number.isRequired,\n    altitude: _propTypes.default.number.isRequired,\n    zoom: _propTypes.default.number.isRequired\n  });\n\n  var viewPropTypes = _reactNative.ViewPropTypes || _reactNative.View.propTypes;\n\n  var propTypes = _objectSpread({}, viewPropTypes, {\n    provider: _propTypes.default.oneOf(['google']),\n    style: viewPropTypes.style,\n    customMapStyle: _propTypes.default.array,\n    customMapStyleString: _propTypes.default.string,\n    showsUserLocation: _propTypes.default.bool,\n    userLocationAnnotationTitle: _propTypes.default.string,\n    showsMyLocationButton: _propTypes.default.bool,\n    followsUserLocation: _propTypes.default.bool,\n    showsPointsOfInterest: _propTypes.default.bool,\n    showsCompass: _propTypes.default.bool,\n    zoomEnabled: _propTypes.default.bool,\n    zoomTapEnabled: _propTypes.default.bool,\n    zoomControlEnabled: _propTypes.default.bool,\n    rotateEnabled: _propTypes.default.bool,\n    cacheEnabled: _propTypes.default.bool,\n    loadingEnabled: _propTypes.default.bool,\n    loadingBackgroundColor: _reactNative.ColorPropType,\n    loadingIndicatorColor: _reactNative.ColorPropType,\n    scrollEnabled: _propTypes.default.bool,\n    pitchEnabled: _propTypes.default.bool,\n    toolbarEnabled: _propTypes.default.bool,\n    moveOnMarkerPress: _propTypes.default.bool,\n    showsScale: _propTypes.default.bool,\n    showsBuildings: _propTypes.default.bool,\n    showsTraffic: _propTypes.default.bool,\n    showsIndoors: _propTypes.default.bool,\n    showsIndoorLevelPicker: _propTypes.default.bool,\n    mapType: _propTypes.default.oneOf(Object.values(MAP_TYPES)),\n    region: _propTypes.default.shape({\n      latitude: _propTypes.default.number.isRequired,\n      longitude: _propTypes.default.number.isRequired,\n      latitudeDelta: _propTypes.default.number.isRequired,\n      longitudeDelta: _propTypes.default.number.isRequired\n    }),\n    initialRegion: _propTypes.default.shape({\n      latitude: _propTypes.default.number.isRequired,\n      longitude: _propTypes.default.number.isRequired,\n      latitudeDelta: _propTypes.default.number.isRequired,\n      longitudeDelta: _propTypes.default.number.isRequired\n    }),\n    camera: CameraShape,\n    initialCamera: CameraShape,\n    liteMode: _propTypes.default.bool,\n    mapPadding: _reactNative.EdgeInsetsPropType,\n    paddingAdjustmentBehavior: _propTypes.default.oneOf(['always', 'automatic', 'never']),\n    maxDelta: _propTypes.default.number,\n    minDelta: _propTypes.default.number,\n    legalLabelInsets: _reactNative.EdgeInsetsPropType,\n    onMapReady: _propTypes.default.func,\n    onMapLoaded: _propTypes.default.func,\n    onKmlReady: _propTypes.default.func,\n    onRegionChange: _propTypes.default.func,\n    onRegionChangeComplete: _propTypes.default.func,\n    onPress: _propTypes.default.func,\n    onDoublePress: _propTypes.default.func,\n    onLongPress: _propTypes.default.func,\n    onUserLocationChange: _propTypes.default.func,\n    onPanDrag: _propTypes.default.func,\n    onPoiClick: _propTypes.default.func,\n    onMarkerPress: _propTypes.default.func,\n    onMarkerSelect: _propTypes.default.func,\n    onMarkerDeselect: _propTypes.default.func,\n    onCalloutPress: _propTypes.default.func,\n    onMarkerDragStart: _propTypes.default.func,\n    onMarkerDrag: _propTypes.default.func,\n    onMarkerDragEnd: _propTypes.default.func,\n    minZoomLevel: _propTypes.default.number,\n    maxZoomLevel: _propTypes.default.number,\n    kmlSrc: _propTypes.default.string,\n    compassOffset: _reactNative.PointPropType,\n    onIndoorLevelActivated: _propTypes.default.func,\n    onIndoorBuildingFocused: _propTypes.default.func\n  });\n\n  var MapView = function (_React$Component) {\n    (0, _inherits2.default)(MapView, _React$Component);\n\n    function MapView(props) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, MapView);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MapView).call(this, props));\n      _this.state = {\n        isReady: _reactNative.Platform.OS === 'ios'\n      };\n      _this._onMapReady = _this._onMapReady.bind((0, _assertThisInitialized2.default)(_this));\n      _this._onMarkerPress = _this._onMarkerPress.bind((0, _assertThisInitialized2.default)(_this));\n      _this._onChange = _this._onChange.bind((0, _assertThisInitialized2.default)(_this));\n      _this._onLayout = _this._onLayout.bind((0, _assertThisInitialized2.default)(_this));\n      return _this;\n    }\n\n    (0, _createClass2.default)(MapView, [{\n      key: \"getChildContext\",\n      value: function getChildContext() {\n        return {\n          provider: this.props.provider\n        };\n      }\n    }, {\n      key: \"getSnapshotBeforeUpdate\",\n      value: function getSnapshotBeforeUpdate(prevProps) {\n        if (this.state.isReady && this.props.customMapStyle !== prevProps.customMapStyle) {\n          this._updateStyle(this.props);\n        }\n\n        return this.props.region || null;\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps, prevState, region) {\n        var a = this.__lastRegion;\n        var b = region;\n\n        if (!a || !b) {\n          return;\n        }\n\n        if (a.latitude !== b.latitude || a.longitude !== b.longitude || a.latitudeDelta !== b.latitudeDelta || a.longitudeDelta !== b.longitudeDelta) {\n          this.map.setNativeProps({\n            region: b\n          });\n        }\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var isReady = this.state.isReady;\n\n        if (isReady) {\n          this._updateStyle(this.props);\n        }\n      }\n    }, {\n      key: \"_updateStyle\",\n      value: function _updateStyle(props) {\n        var customMapStyle = props.customMapStyle;\n        this.map.setNativeProps({\n          customMapStyleString: JSON.stringify(customMapStyle)\n        });\n      }\n    }, {\n      key: \"_onMapReady\",\n      value: function _onMapReady() {\n        var _this$props = this.props,\n            region = _this$props.region,\n            initialRegion = _this$props.initialRegion,\n            onMapReady = _this$props.onMapReady;\n\n        if (region) {\n          this.map.setNativeProps({\n            region: region\n          });\n        } else if (initialRegion) {\n          this.map.setNativeProps({\n            initialRegion: initialRegion\n          });\n        }\n\n        this._updateStyle(this.props);\n\n        this.setState({\n          isReady: true\n        }, function () {\n          if (onMapReady) {\n            onMapReady();\n          }\n        });\n      }\n    }, {\n      key: \"_onLayout\",\n      value: function _onLayout(e) {\n        var layout = e.nativeEvent.layout;\n\n        if (!layout.width || !layout.height) {\n          return;\n        }\n\n        if (this.state.isReady && !this.__layoutCalled) {\n          var _this$props2 = this.props,\n              region = _this$props2.region,\n              initialRegion = _this$props2.initialRegion;\n\n          if (region) {\n            this.__layoutCalled = true;\n            this.map.setNativeProps({\n              region: region\n            });\n          } else if (initialRegion) {\n            this.__layoutCalled = true;\n            this.map.setNativeProps({\n              initialRegion: initialRegion\n            });\n          }\n        }\n\n        if (this.props.onLayout) {\n          this.props.onLayout(e);\n        }\n      }\n    }, {\n      key: \"_onMarkerPress\",\n      value: function _onMarkerPress(event) {\n        if (this.props.onMarkerPress) {\n          this.props.onMarkerPress(event.nativeEvent);\n        }\n      }\n    }, {\n      key: \"_onChange\",\n      value: function _onChange(event) {\n        this.__lastRegion = event.nativeEvent.region;\n\n        if (event.nativeEvent.continuous) {\n          if (this.props.onRegionChange) {\n            this.props.onRegionChange(event.nativeEvent.region);\n          }\n        } else if (this.props.onRegionChangeComplete) {\n          this.props.onRegionChangeComplete(event.nativeEvent.region);\n        }\n      }\n    }, {\n      key: \"getCamera\",\n      value: function getCamera() {\n        if (_reactNative.Platform.OS === 'android') {\n          return _reactNative.NativeModules.AirMapModule.getCamera(this._getHandle());\n        } else if (_reactNative.Platform.OS === 'ios') {\n          return this._runCommand('getCamera', []);\n        }\n\n        return Promise.reject('getCamera not supported on this platform');\n      }\n    }, {\n      key: \"setCamera\",\n      value: function setCamera(camera) {\n        this._runCommand('setCamera', [camera]);\n      }\n    }, {\n      key: \"animateCamera\",\n      value: function animateCamera(camera, opts) {\n        this._runCommand('animateCamera', [camera, opts && opts.duration || 500]);\n      }\n    }, {\n      key: \"animateToNavigation\",\n      value: function animateToNavigation(location, bearing, angle, duration) {\n        console.warn('animateToNavigation() is deprecated, use animateCamera() instead');\n\n        this._runCommand('animateToNavigation', [location, bearing, angle, duration || 500]);\n      }\n    }, {\n      key: \"animateToRegion\",\n      value: function animateToRegion(region, duration) {\n        this._runCommand('animateToRegion', [region, duration || 500]);\n      }\n    }, {\n      key: \"animateToCoordinate\",\n      value: function animateToCoordinate(latLng, duration) {\n        console.warn('animateToCoordinate() is deprecated, use animateCamera() instead');\n\n        this._runCommand('animateToCoordinate', [latLng, duration || 500]);\n      }\n    }, {\n      key: \"animateToBearing\",\n      value: function animateToBearing(bearing, duration) {\n        console.warn('animateToBearing() is deprecated, use animateCamera() instead');\n\n        this._runCommand('animateToBearing', [bearing, duration || 500]);\n      }\n    }, {\n      key: \"animateToViewingAngle\",\n      value: function animateToViewingAngle(angle, duration) {\n        console.warn('animateToViewingAngle() is deprecated, use animateCamera() instead');\n\n        this._runCommand('animateToViewingAngle', [angle, duration || 500]);\n      }\n    }, {\n      key: \"fitToElements\",\n      value: function fitToElements(animated) {\n        this._runCommand('fitToElements', [animated]);\n      }\n    }, {\n      key: \"fitToSuppliedMarkers\",\n      value: function fitToSuppliedMarkers(markers) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var _options$edgePadding = options.edgePadding,\n            edgePadding = _options$edgePadding === void 0 ? {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0\n        } : _options$edgePadding,\n            _options$animated = options.animated,\n            animated = _options$animated === void 0 ? true : _options$animated;\n\n        this._runCommand('fitToSuppliedMarkers', [markers, edgePadding, animated]);\n      }\n    }, {\n      key: \"fitToCoordinates\",\n      value: function fitToCoordinates() {\n        var coordinates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var _options$edgePadding2 = options.edgePadding,\n            edgePadding = _options$edgePadding2 === void 0 ? {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0\n        } : _options$edgePadding2,\n            _options$animated2 = options.animated,\n            animated = _options$animated2 === void 0 ? true : _options$animated2;\n\n        this._runCommand('fitToCoordinates', [coordinates, edgePadding, animated]);\n      }\n    }, {\n      key: \"getMapBoundaries\",\n      value: function getMapBoundaries() {\n        return _regenerator.default.async(function getMapBoundaries$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(_reactNative.Platform.OS === 'android')) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 3;\n                return _regenerator.default.awrap(_reactNative.NativeModules.AirMapModule.getMapBoundaries(this._getHandle()));\n\n              case 3:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 6:\n                if (!(_reactNative.Platform.OS === 'ios')) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 9;\n                return _regenerator.default.awrap(this._runCommand('getMapBoundaries', []));\n\n              case 9:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 10:\n                return _context.abrupt(\"return\", Promise.reject('getMapBoundaries not supported on this platform'));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"setMapBoundaries\",\n      value: function setMapBoundaries(northEast, southWest) {\n        this._runCommand('setMapBoundaries', [northEast, southWest]);\n      }\n    }, {\n      key: \"setIndoorActiveLevelIndex\",\n      value: function setIndoorActiveLevelIndex(activeLevelIndex) {\n        this._runCommand('setIndoorActiveLevelIndex', [activeLevelIndex]);\n      }\n    }, {\n      key: \"takeSnapshot\",\n      value: function takeSnapshot(args) {\n        var _this2 = this;\n\n        if (_reactNative.Platform.OS === 'ios' && arguments.length === 4) {\n          console.warn('Old takeSnapshot API has been deprecated; will be removed in the near future');\n          var width = arguments[0];\n          var height = arguments[1];\n          var region = arguments[2];\n          var callback = arguments[3];\n\n          this._runCommand('takeSnapshot', [width || 0, height || 0, region || {}, 'png', 1, 'legacy', callback]);\n\n          return undefined;\n        }\n\n        var config = {\n          width: args.width || 0,\n          height: args.height || 0,\n          region: args.region || {},\n          format: args.format || 'png',\n          quality: args.quality || 1.0,\n          result: args.result || 'file'\n        };\n\n        if (config.format !== 'png' && config.format !== 'jpg') {\n          throw new Error('Invalid format specified');\n        }\n\n        if (config.result !== 'file' && config.result !== 'base64') {\n          throw new Error('Invalid result specified');\n        }\n\n        if (_reactNative.Platform.OS === 'android') {\n          return _reactNative.NativeModules.AirMapModule.takeSnapshot(this._getHandle(), config);\n        } else if (_reactNative.Platform.OS === 'ios') {\n          return new Promise(function (resolve, reject) {\n            _this2._runCommand('takeSnapshot', [config.width, config.height, config.region, config.format, config.quality, config.result, function (err, snapshot) {\n              if (err) {\n                reject(err);\n              } else {\n                resolve(snapshot);\n              }\n            }]);\n          });\n        }\n\n        return Promise.reject('takeSnapshot not supported on this platform');\n      }\n    }, {\n      key: \"pointForCoordinate\",\n      value: function pointForCoordinate(coordinate) {\n        if (_reactNative.Platform.OS === 'android') {\n          return _reactNative.NativeModules.AirMapModule.pointForCoordinate(this._getHandle(), coordinate);\n        } else if (_reactNative.Platform.OS === 'ios') {\n          return this._runCommand('pointForCoordinate', [coordinate]);\n        }\n\n        return Promise.reject('pointForCoordinate not supported on this platform');\n      }\n    }, {\n      key: \"coordinateForPoint\",\n      value: function coordinateForPoint(point) {\n        if (_reactNative.Platform.OS === 'android') {\n          return _reactNative.NativeModules.AirMapModule.coordinateForPoint(this._getHandle(), point);\n        } else if (_reactNative.Platform.OS === 'ios') {\n          return this._runCommand('coordinateForPoint', [point]);\n        }\n\n        return Promise.reject('coordinateForPoint not supported on this platform');\n      }\n    }, {\n      key: \"getMarkersFrames\",\n      value: function getMarkersFrames() {\n        var onlyVisible = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n        if (_reactNative.Platform.OS === 'ios') {\n          return this._runCommand('getMarkersFrames', [onlyVisible]);\n        }\n\n        return Promise.reject('getMarkersFrames not supported on this platform');\n      }\n    }, {\n      key: \"boundingBoxForRegion\",\n      value: function boundingBoxForRegion(region) {\n        return {\n          northEast: {\n            latitude: region.latitude + region.latitudeDelta / 2,\n            longitude: region.longitude + region.longitudeDelta / 2\n          },\n          southWest: {\n            latitude: region.latitude - region.latitudeDelta / 2,\n            longitude: region.longitude - region.longitudeDelta / 2\n          }\n        };\n      }\n    }, {\n      key: \"_uiManagerCommand\",\n      value: function _uiManagerCommand(name) {\n        var UIManager = _reactNative.NativeModules.UIManager;\n        var componentName = (0, _decorateMapComponent.getAirMapName)(this.props.provider);\n\n        if (!UIManager.getViewManagerConfig) {\n          return UIManager[componentName].Commands[name];\n        }\n\n        return UIManager.getViewManagerConfig(componentName).Commands[name];\n      }\n    }, {\n      key: \"_mapManagerCommand\",\n      value: function _mapManagerCommand(name) {\n        var managerName = (0, _decorateMapComponent.getAirMapName)(this.props.provider);\n\n        if (managerName === 'UI') {\n          var UIManager = _reactNative.NativeModules.UIManager;\n\n          if (!UIManager.getViewManagerConfig) {\n            return UIManager[name];\n          }\n\n          return UIManager.getViewManagerConfig(name);\n        }\n\n        return _reactNative.NativeModules[(0, _decorateMapComponent.getAirMapName)(this.props.provider) + \"Manager\"][name];\n      }\n    }, {\n      key: \"_getHandle\",\n      value: function _getHandle() {\n        return (0, _reactNative.findNodeHandle)(this.map);\n      }\n    }, {\n      key: \"_runCommand\",\n      value: function _runCommand(name, args) {\n        switch (_reactNative.Platform.OS) {\n          case 'android':\n            return _reactNative.NativeModules.UIManager.dispatchViewManagerCommand(this._getHandle(), this._uiManagerCommand(name), args);\n\n          case 'ios':\n            return this._mapManagerCommand(name).apply(void 0, [this._getHandle()].concat((0, _toConsumableArray2.default)(args)));\n\n          default:\n            return Promise.reject(\"Invalid platform was passed: \" + _reactNative.Platform.OS);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this3 = this;\n\n        var props;\n\n        if (this.state.isReady) {\n          props = _objectSpread({\n            region: null,\n            initialRegion: null,\n            onMarkerPress: this._onMarkerPress,\n            onChange: this._onChange,\n            onMapReady: this._onMapReady,\n            onLayout: this._onLayout\n          }, this.props);\n\n          if (_reactNative.Platform.OS === 'ios' && props.provider === ProviderConstants.PROVIDER_DEFAULT && GOOGLE_MAPS_ONLY_TYPES.includes(props.mapType)) {\n            props.mapType = MAP_TYPES.standard;\n          }\n\n          props.handlePanDrag = !!props.onPanDrag;\n        } else {\n          props = {\n            style: this.props.style,\n            region: null,\n            initialRegion: null,\n            onMarkerPress: this._onMarkerPress,\n            onChange: this._onChange,\n            onMapReady: this._onMapReady,\n            onLayout: this._onLayout\n          };\n        }\n\n        if (_reactNative.Platform.OS === 'android' && this.props.liteMode) {\n          return _react.default.createElement(AIRMapLite, (0, _extends2.default)({\n            ref: function ref(_ref) {\n              _this3.map = _ref;\n            }\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 980\n            }\n          }));\n        }\n\n        var AIRMap = getAirMapComponent(this.props.provider);\n        return _react.default.createElement(AIRMap, (0, _extends2.default)({\n          ref: function ref(_ref2) {\n            _this3.map = _ref2;\n          }\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 992\n          }\n        }));\n      }\n    }]);\n    return MapView;\n  }(_react.default.Component);\n\n  MapView = _wrapComponent(\"MapView\")(MapView);\n  MapView.propTypes = propTypes;\n  MapView.viewConfig = viewConfig;\n  MapView.childContextTypes = _decorateMapComponent.contextTypes;\n  MapView.MAP_TYPES = MAP_TYPES;\n\n  var nativeComponent = function nativeComponent(Component) {\n    return (0, _reactNative.requireNativeComponent)(Component, MapView, {\n      nativeOnly: {\n        onChange: true,\n        onMapReady: true,\n        onKmlReady: true,\n        handlePanDrag: true\n      }\n    });\n  };\n\n  var airMaps = {\n    default: nativeComponent('AIRMap')\n  };\n\n  if (_reactNative.Platform.OS === 'android') {\n    airMaps.google = airMaps.default;\n  } else {\n    airMaps.google = _decorateMapComponent.googleMapIsInstalled ? nativeComponent('AIRGoogleMap') : (0, _decorateMapComponent.createNotSupportedComponent)('react-native-maps: AirGoogleMaps dir must be added to your xCode project to support GoogleMaps on iOS.');\n  }\n\n  var getAirMapComponent = function getAirMapComponent(provider) {\n    return airMaps[provider || 'default'];\n  };\n\n  var AIRMapLite;\n\n  if (!_reactNative.NativeModules.UIManager.getViewManagerConfig) {\n    AIRMapLite = _reactNative.NativeModules.UIManager.AIRMapLite && (0, _reactNative.requireNativeComponent)('AIRMapLite', MapView, {\n      nativeOnly: {\n        onChange: true,\n        onMapReady: true,\n        handlePanDrag: true\n      }\n    });\n  } else {\n    AIRMapLite = _reactNative.NativeModules.UIManager.getViewManagerConfig('AIRMapLite') && (0, _reactNative.requireNativeComponent)('AIRMapLite', MapView, {\n      nativeOnly: {\n        onChange: true,\n        onMapReady: true,\n        handlePanDrag: true\n      }\n    });\n  }\n\n  var Animated = _reactNative.Animated.createAnimatedComponent(MapView);\n\n  exports.Animated = Animated;\n\n  var ProviderPropType = _propTypes.default.oneOf(Object.values(ProviderConstants));\n\n  exports.ProviderPropType = ProviderPropType;\n  MapView.Marker = _MapMarker.default;\n  MapView.Polyline = _MapPolyline.default;\n  MapView.Polygon = _MapPolygon.default;\n  MapView.Circle = _MapCircle.default;\n  MapView.UrlTile = _MapUrlTile.default;\n  MapView.MapWMSTile = _MapWMSTile.default;\n  MapView.LocalTile = _MapLocalTile.default;\n  MapView.Overlay = _MapOverlay.default;\n  MapView.Callout = _MapCallout.default;\n  MapView.CalloutSubview = _MapCalloutSubview.default;\n  (0, _extends2.default)(MapView, ProviderConstants);\n  MapView.ProviderPropType = ProviderPropType;\n  MapView.Animated = Animated;\n  MapView.AnimatedRegion = _AnimatedRegion.default;\n  var _default2 = MapView;\n  exports.default = _default2;\n});","map":[[31,0,2,0],[35,0,1,0],[37,0,3,0],[39,0,15,0],[41,0,16,0],[43,0,17,0],[45,0,18,0],[47,0,19,0],[49,0,20,0],[51,0,21,0],[53,0,22,0],[55,0,23,0],[57,0,24,0],[59,0,25,0],[61,0,26,0],[63,0,32,0],[90,0,34,7],[90,6,34,13,"MAP_TYPES"],[90,15,34,22],[90,18,34,25],[91,0,35,2,"STANDARD"],[91,4,35,2,"STANDARD"],[91,12,35,10],[91,14,35,12],[91,24,34,25],[92,0,36,2,"SATELLITE"],[92,4,36,2,"SATELLITE"],[92,13,36,11],[92,15,36,13],[92,26,34,25],[93,0,37,2,"HYBRID"],[93,4,37,2,"HYBRID"],[93,10,37,8],[93,12,37,10],[93,20,34,25],[94,0,38,2,"TERRAIN"],[94,4,38,2,"TERRAIN"],[94,11,38,9],[94,13,38,11],[94,22,34,25],[95,0,39,2,"NONE"],[95,4,39,2,"NONE"],[95,8,39,6],[95,10,39,8],[95,16,34,25],[96,0,40,2,"MUTEDSTANDARD"],[96,4,40,2,"MUTEDSTANDARD"],[96,17,40,15],[96,19,40,17],[97,0,34,25],[97,3,34,7],[99,0,43,0],[99,6,43,6,"GOOGLE_MAPS_ONLY_TYPES"],[99,28,43,28],[99,31,43,31],[99,32,43,32,"MAP_TYPES"],[99,41,43,41],[99,42,43,42,"TERRAIN"],[99,49,43,31],[99,51,43,51,"MAP_TYPES"],[99,60,43,60],[99,61,43,61,"NONE"],[99,65,43,31],[99,66,43,0],[100,0,45,0],[100,6,45,6,"viewConfig"],[100,16,45,16],[100,19,45,19],[101,0,46,2,"uiViewClassName"],[101,4,46,2,"uiViewClassName"],[101,19,46,17],[101,21,46,19],[101,39,45,19],[102,0,47,2,"validAttributes"],[102,4,47,2,"validAttributes"],[102,19,47,17],[102,21,47,19],[103,0,48,4,"region"],[103,6,48,4,"region"],[103,12,48,10],[103,14,48,12],[104,0,47,19],[105,0,45,19],[105,3,45,0],[107,0,55,0],[107,6,55,6,"CameraShape"],[107,17,55,17],[107,20,55,20,"PropTypes"],[107,39,55,30,"shape"],[107,44,55,20],[107,45,55,36],[108,0,56,2,"center"],[108,4,56,2,"center"],[108,10,56,8],[108,12,56,10,"PropTypes"],[108,31,56,20,"shape"],[108,36,56,10],[108,37,56,26],[109,0,57,4,"latitude"],[109,6,57,4,"latitude"],[109,14,57,12],[109,16,57,14,"PropTypes"],[109,35,57,24,"number"],[109,41,57,14],[109,42,57,31,"isRequired"],[109,52,56,26],[110,0,58,4,"longitude"],[110,6,58,4,"longitude"],[110,15,58,13],[110,17,58,15,"PropTypes"],[110,36,58,25,"number"],[110,42,58,15],[110,43,58,32,"isRequired"],[111,0,56,26],[111,5,56,10],[111,6,55,36],[112,0,60,2,"pitch"],[112,4,60,2,"pitch"],[112,9,60,7],[112,11,60,9,"PropTypes"],[112,30,60,19,"number"],[112,36,60,9],[112,37,60,26,"isRequired"],[112,47,55,36],[113,0,61,2,"heading"],[113,4,61,2,"heading"],[113,11,61,9],[113,13,61,11,"PropTypes"],[113,32,61,21,"number"],[113,38,61,11],[113,39,61,28,"isRequired"],[113,49,55,36],[114,0,62,2,"altitude"],[114,4,62,2,"altitude"],[114,12,62,10],[114,14,62,12,"PropTypes"],[114,33,62,22,"number"],[114,39,62,12],[114,40,62,29,"isRequired"],[114,50,55,36],[115,0,63,2,"zoom"],[115,4,63,2,"zoom"],[115,8,63,6],[115,10,63,8,"PropTypes"],[115,29,63,18,"number"],[115,35,63,8],[115,36,63,25,"isRequired"],[116,0,55,36],[116,3,55,20],[116,4,55,0],[118,0,67,0],[118,6,67,6,"viewPropTypes"],[118,19,67,19],[118,22,67,22,"ViewPropTypes"],[118,52,67,39,"View"],[118,70,67,44,"propTypes"],[118,79,67,0],[120,0,69,0],[120,6,69,6,"propTypes"],[120,15,69,15],[120,36,70,5,"viewPropTypes"],[120,49,69,15],[121,0,76,2,"provider"],[121,4,76,2,"provider"],[121,12,76,10],[121,14,76,12,"PropTypes"],[121,33,76,22,"oneOf"],[121,38,76,12],[121,39,76,28],[121,40,76,29],[121,48,76,28],[121,49,76,12],[121,50,69,15],[122,0,82,2,"style"],[122,4,82,2,"style"],[122,9,82,7],[122,11,82,9,"viewPropTypes"],[122,24,82,22],[122,25,82,23,"style"],[122,30,69,15],[123,0,90,2,"customMapStyle"],[123,4,90,2,"customMapStyle"],[123,18,90,16],[123,20,90,18,"PropTypes"],[123,39,90,28,"array"],[123,44,69,15],[124,0,97,2,"customMapStyleString"],[124,4,97,2,"customMapStyleString"],[124,24,97,22],[124,26,97,24,"PropTypes"],[124,45,97,34,"string"],[124,51,69,15],[125,0,109,2,"showsUserLocation"],[125,4,109,2,"showsUserLocation"],[125,21,109,19],[125,23,109,21,"PropTypes"],[125,42,109,31,"bool"],[125,46,69,15],[126,0,118,2,"userLocationAnnotationTitle"],[126,4,118,2,"userLocationAnnotationTitle"],[126,31,118,29],[126,33,118,31,"PropTypes"],[126,52,118,41,"string"],[126,58,69,15],[127,0,126,2,"showsMyLocationButton"],[127,4,126,2,"showsMyLocationButton"],[127,25,126,23],[127,27,126,25,"PropTypes"],[127,46,126,35,"bool"],[127,50,69,15],[128,0,135,2,"followsUserLocation"],[128,4,135,2,"followsUserLocation"],[128,23,135,21],[128,25,135,23,"PropTypes"],[128,44,135,33,"bool"],[128,48,69,15],[129,0,142,2,"showsPointsOfInterest"],[129,4,142,2,"showsPointsOfInterest"],[129,25,142,23],[129,27,142,25,"PropTypes"],[129,46,142,35,"bool"],[129,50,69,15],[130,0,150,2,"showsCompass"],[130,4,150,2,"showsCompass"],[130,16,150,14],[130,18,150,16,"PropTypes"],[130,37,150,26,"bool"],[130,41,69,15],[131,0,157,2,"zoomEnabled"],[131,4,157,2,"zoomEnabled"],[131,15,157,13],[131,17,157,15,"PropTypes"],[131,36,157,25,"bool"],[131,40,69,15],[132,0,165,2,"zoomTapEnabled"],[132,4,165,2,"zoomTapEnabled"],[132,18,165,16],[132,20,165,18,"PropTypes"],[132,39,165,28,"bool"],[132,43,69,15],[133,0,173,2,"zoomControlEnabled"],[133,4,173,2,"zoomControlEnabled"],[133,22,173,20],[133,24,173,22,"PropTypes"],[133,43,173,32,"bool"],[133,47,69,15],[134,0,180,2,"rotateEnabled"],[134,4,180,2,"rotateEnabled"],[134,17,180,15],[134,19,180,17,"PropTypes"],[134,38,180,27,"bool"],[134,42,69,15],[135,0,187,2,"cacheEnabled"],[135,4,187,2,"cacheEnabled"],[135,16,187,14],[135,18,187,16,"PropTypes"],[135,37,187,26,"bool"],[135,41,69,15],[136,0,194,2,"loadingEnabled"],[136,4,194,2,"loadingEnabled"],[136,18,194,16],[136,20,194,18,"PropTypes"],[136,39,194,28,"bool"],[136,43,69,15],[137,0,201,2,"loadingBackgroundColor"],[137,4,201,2,"loadingBackgroundColor"],[137,26,201,24],[137,28,201,26,"ColorPropType"],[137,54,69,15],[138,0,208,2,"loadingIndicatorColor"],[138,4,208,2,"loadingIndicatorColor"],[138,25,208,23],[138,27,208,25,"ColorPropType"],[138,53,69,15],[139,0,215,2,"scrollEnabled"],[139,4,215,2,"scrollEnabled"],[139,17,215,15],[139,19,215,17,"PropTypes"],[139,38,215,27,"bool"],[139,42,69,15],[140,0,222,2,"pitchEnabled"],[140,4,222,2,"pitchEnabled"],[140,16,222,14],[140,18,222,16,"PropTypes"],[140,37,222,26,"bool"],[140,41,69,15],[141,0,230,2,"toolbarEnabled"],[141,4,230,2,"toolbarEnabled"],[141,18,230,16],[141,20,230,18,"PropTypes"],[141,39,230,28,"bool"],[141,43,69,15],[142,0,238,2,"moveOnMarkerPress"],[142,4,238,2,"moveOnMarkerPress"],[142,21,238,19],[142,23,238,21,"PropTypes"],[142,42,238,31,"bool"],[142,46,69,15],[143,0,246,2,"showsScale"],[143,4,246,2,"showsScale"],[143,14,246,12],[143,16,246,14,"PropTypes"],[143,35,246,24,"bool"],[143,39,69,15],[144,0,252,2,"showsBuildings"],[144,4,252,2,"showsBuildings"],[144,18,252,16],[144,20,252,18,"PropTypes"],[144,39,252,28,"bool"],[144,43,69,15],[145,0,258,2,"showsTraffic"],[145,4,258,2,"showsTraffic"],[145,16,258,14],[145,18,258,16,"PropTypes"],[145,37,258,26,"bool"],[145,41,69,15],[146,0,266,2,"showsIndoors"],[146,4,266,2,"showsIndoors"],[146,16,266,14],[146,18,266,16,"PropTypes"],[146,37,266,26,"bool"],[146,41,69,15],[147,0,274,2,"showsIndoorLevelPicker"],[147,4,274,2,"showsIndoorLevelPicker"],[147,26,274,24],[147,28,274,26,"PropTypes"],[147,47,274,36,"bool"],[147,51,69,15],[148,0,285,2,"mapType"],[148,4,285,2,"mapType"],[148,11,285,9],[148,13,285,11,"PropTypes"],[148,32,285,21,"oneOf"],[148,37,285,11],[148,38,285,27,"Object"],[148,44,285,33],[148,45,285,34,"values"],[148,51,285,27],[148,52,285,41,"MAP_TYPES"],[148,61,285,27],[148,62,285,11],[148,63,69,15],[149,0,293,2,"region"],[149,4,293,2,"region"],[149,10,293,8],[149,12,293,10,"PropTypes"],[149,31,293,20,"shape"],[149,36,293,10],[149,37,293,26],[150,0,297,4,"latitude"],[150,6,297,4,"latitude"],[150,14,297,12],[150,16,297,14,"PropTypes"],[150,35,297,24,"number"],[150,41,297,14],[150,42,297,31,"isRequired"],[150,52,293,26],[151,0,298,4,"longitude"],[151,6,298,4,"longitude"],[151,15,298,13],[151,17,298,15,"PropTypes"],[151,36,298,25,"number"],[151,42,298,15],[151,43,298,32,"isRequired"],[151,53,293,26],[152,0,304,4,"latitudeDelta"],[152,6,304,4,"latitudeDelta"],[152,19,304,17],[152,21,304,19,"PropTypes"],[152,40,304,29,"number"],[152,46,304,19],[152,47,304,36,"isRequired"],[152,57,293,26],[153,0,305,4,"longitudeDelta"],[153,6,305,4,"longitudeDelta"],[153,20,305,18],[153,22,305,20,"PropTypes"],[153,41,305,30,"number"],[153,47,305,20],[153,48,305,37,"isRequired"],[154,0,293,26],[154,5,293,10],[154,6,69,15],[155,0,316,2,"initialRegion"],[155,4,316,2,"initialRegion"],[155,17,316,15],[155,19,316,17,"PropTypes"],[155,38,316,27,"shape"],[155,43,316,17],[155,44,316,33],[156,0,320,4,"latitude"],[156,6,320,4,"latitude"],[156,14,320,12],[156,16,320,14,"PropTypes"],[156,35,320,24,"number"],[156,41,320,14],[156,42,320,31,"isRequired"],[156,52,316,33],[157,0,321,4,"longitude"],[157,6,321,4,"longitude"],[157,15,321,13],[157,17,321,15,"PropTypes"],[157,36,321,25,"number"],[157,42,321,15],[157,43,321,32,"isRequired"],[157,53,316,33],[158,0,327,4,"latitudeDelta"],[158,6,327,4,"latitudeDelta"],[158,19,327,17],[158,21,327,19,"PropTypes"],[158,40,327,29,"number"],[158,46,327,19],[158,47,327,36,"isRequired"],[158,57,316,33],[159,0,328,4,"longitudeDelta"],[159,6,328,4,"longitudeDelta"],[159,20,328,18],[159,22,328,20,"PropTypes"],[159,41,328,30,"number"],[159,47,328,20],[159,48,328,37,"isRequired"],[160,0,316,33],[160,5,316,17],[160,6,69,15],[161,0,337,2,"camera"],[161,4,337,2,"camera"],[161,10,337,8],[161,12,337,10,"CameraShape"],[161,23,69,15],[162,0,350,2,"initialCamera"],[162,4,350,2,"initialCamera"],[162,17,350,15],[162,19,350,17,"CameraShape"],[162,30,69,15],[163,0,358,2,"liteMode"],[163,4,358,2,"liteMode"],[163,12,358,10],[163,14,358,12,"PropTypes"],[163,33,358,22,"bool"],[163,37,69,15],[164,0,367,2,"mapPadding"],[164,4,367,2,"mapPadding"],[164,14,367,12],[164,16,367,14,"EdgeInsetsPropType"],[164,47,69,15],[165,0,376,2,"paddingAdjustmentBehavior"],[165,4,376,2,"paddingAdjustmentBehavior"],[165,29,376,27],[165,31,376,29,"PropTypes"],[165,50,376,39,"oneOf"],[165,55,376,29],[165,56,376,45],[165,57,376,46],[165,65,376,45],[165,67,376,56],[165,78,376,45],[165,80,376,69],[165,87,376,45],[165,88,376,29],[165,89,69,15],[166,0,383,2,"maxDelta"],[166,4,383,2,"maxDelta"],[166,12,383,10],[166,14,383,12,"PropTypes"],[166,33,383,22,"number"],[166,39,69,15],[167,0,390,2,"minDelta"],[167,4,390,2,"minDelta"],[167,12,390,10],[167,14,390,12,"PropTypes"],[167,33,390,22,"number"],[167,39,69,15],[168,0,396,2,"legalLabelInsets"],[168,4,396,2,"legalLabelInsets"],[168,20,396,18],[168,22,396,20,"EdgeInsetsPropType"],[168,53,69,15],[169,0,401,2,"onMapReady"],[169,4,401,2,"onMapReady"],[169,14,401,12],[169,16,401,14,"PropTypes"],[169,35,401,24,"func"],[169,39,69,15],[170,0,407,2,"onMapLoaded"],[170,4,407,2,"onMapLoaded"],[170,15,407,13],[170,17,407,15,"PropTypes"],[170,36,407,25,"func"],[170,40,69,15],[171,0,412,2,"onKmlReady"],[171,4,412,2,"onKmlReady"],[171,14,412,12],[171,16,412,14,"PropTypes"],[171,35,412,24,"func"],[171,39,69,15],[172,0,417,2,"onRegionChange"],[172,4,417,2,"onRegionChange"],[172,18,417,16],[172,20,417,18,"PropTypes"],[172,39,417,28,"func"],[172,43,69,15],[173,0,422,2,"onRegionChangeComplete"],[173,4,422,2,"onRegionChangeComplete"],[173,26,422,24],[173,28,422,26,"PropTypes"],[173,47,422,36,"func"],[173,51,69,15],[174,0,427,2,"onPress"],[174,4,427,2,"onPress"],[174,11,427,9],[174,13,427,11,"PropTypes"],[174,32,427,21,"func"],[174,36,69,15],[175,0,432,2,"onDoublePress"],[175,4,432,2,"onDoublePress"],[175,17,432,15],[175,19,432,17,"PropTypes"],[175,38,432,27,"func"],[175,42,69,15],[176,0,437,2,"onLongPress"],[176,4,437,2,"onLongPress"],[176,15,437,13],[176,17,437,15,"PropTypes"],[176,36,437,25,"func"],[176,40,69,15],[177,0,442,2,"onUserLocationChange"],[177,4,442,2,"onUserLocationChange"],[177,24,442,22],[177,26,442,24,"PropTypes"],[177,45,442,34,"func"],[177,49,69,15],[178,0,447,2,"onPanDrag"],[178,4,447,2,"onPanDrag"],[178,13,447,11],[178,15,447,13,"PropTypes"],[178,34,447,23,"func"],[178,38,69,15],[179,0,452,2,"onPoiClick"],[179,4,452,2,"onPoiClick"],[179,14,452,12],[179,16,452,14,"PropTypes"],[179,35,452,24,"func"],[179,39,69,15],[180,0,457,2,"onMarkerPress"],[180,4,457,2,"onMarkerPress"],[180,17,457,15],[180,19,457,17,"PropTypes"],[180,38,457,27,"func"],[180,42,69,15],[181,0,465,2,"onMarkerSelect"],[181,4,465,2,"onMarkerSelect"],[181,18,465,16],[181,20,465,18,"PropTypes"],[181,39,465,28,"func"],[181,43,69,15],[182,0,473,2,"onMarkerDeselect"],[182,4,473,2,"onMarkerDeselect"],[182,20,473,18],[182,22,473,20,"PropTypes"],[182,41,473,30,"func"],[182,45,69,15],[183,0,478,2,"onCalloutPress"],[183,4,478,2,"onCalloutPress"],[183,18,478,16],[183,20,478,18,"PropTypes"],[183,39,478,28,"func"],[183,43,69,15],[184,0,483,2,"onMarkerDragStart"],[184,4,483,2,"onMarkerDragStart"],[184,21,483,19],[184,23,483,21,"PropTypes"],[184,42,483,31,"func"],[184,46,69,15],[185,0,488,2,"onMarkerDrag"],[185,4,488,2,"onMarkerDrag"],[185,16,488,14],[185,18,488,16,"PropTypes"],[185,37,488,26,"func"],[185,41,69,15],[186,0,494,2,"onMarkerDragEnd"],[186,4,494,2,"onMarkerDragEnd"],[186,19,494,17],[186,21,494,19,"PropTypes"],[186,40,494,29,"func"],[186,44,69,15],[187,0,499,2,"minZoomLevel"],[187,4,499,2,"minZoomLevel"],[187,16,499,14],[187,18,499,16,"PropTypes"],[187,37,499,26,"number"],[187,43,69,15],[188,0,504,2,"maxZoomLevel"],[188,4,504,2,"maxZoomLevel"],[188,16,504,14],[188,18,504,16,"PropTypes"],[188,37,504,26,"number"],[188,43,69,15],[189,0,509,2,"kmlSrc"],[189,4,509,2,"kmlSrc"],[189,10,509,8],[189,12,509,10,"PropTypes"],[189,31,509,20,"string"],[189,37,69,15],[190,0,516,2,"compassOffset"],[190,4,516,2,"compassOffset"],[190,17,516,15],[190,19,516,17,"PointPropType"],[190,45,69,15],[191,0,521,2,"onIndoorLevelActivated"],[191,4,521,2,"onIndoorLevelActivated"],[191,26,521,24],[191,28,521,26,"PropTypes"],[191,47,521,36,"func"],[191,51,69,15],[192,0,526,2,"onIndoorBuildingFocused"],[192,4,526,2,"onIndoorBuildingFocused"],[192,27,526,25],[192,29,526,27,"PropTypes"],[192,48,526,37,"func"],[193,0,69,15],[193,4,69,0],[195,6,529,6,"MapView"],[195,13],[198,0,530,2],[198,21,530,14,"props"],[198,26,530,2],[198,28,530,21],[199,0,530,21],[201,0,530,21],[202,0,531,4],[202,111,531,10,"props"],[202,116,531,4],[203,0,533,4],[203,12,533,9,"state"],[203,17,533,4],[203,20,533,17],[204,0,534,6,"isReady"],[204,8,534,6,"isReady"],[204,15,534,13],[204,17,534,15,"Platform"],[204,39,534,24,"OS"],[204,41,534,15],[204,46,534,31],[205,0,533,17],[205,7,533,4],[206,0,537,4],[206,12,537,9,"_onMapReady"],[206,23,537,4],[206,26,537,23],[206,32,537,28,"_onMapReady"],[206,43,537,23],[206,44,537,40,"bind"],[206,48,537,23],[206,93,537,4],[207,0,538,4],[207,12,538,9,"_onMarkerPress"],[207,26,538,4],[207,29,538,26],[207,35,538,31,"_onMarkerPress"],[207,49,538,26],[207,50,538,46,"bind"],[207,54,538,26],[207,99,538,4],[208,0,539,4],[208,12,539,9,"_onChange"],[208,21,539,4],[208,24,539,21],[208,30,539,26,"_onChange"],[208,39,539,21],[208,40,539,36,"bind"],[208,44,539,21],[208,89,539,4],[209,0,540,4],[209,12,540,9,"_onLayout"],[209,21,540,4],[209,24,540,21],[209,30,540,26,"_onLayout"],[209,39,540,21],[209,40,540,36,"bind"],[209,44,540,21],[209,89,540,4],[210,0,530,21],[211,0,541,3],[215,40,543,20],[216,0,544,4],[216,15,544,11],[217,0,544,13,"provider"],[217,10,544,13,"provider"],[217,18,544,21],[217,20,544,23],[217,25,544,28,"props"],[217,30,544,23],[217,31,544,34,"provider"],[218,0,544,11],[218,9,544,4],[219,0,545,3],[222,46,547,26,"prevProps"],[222,55],[222,57,547,37],[223,0,548,4],[223,12,549,6],[223,17,549,11,"state"],[223,22,549,6],[223,23,549,17,"isReady"],[223,30,549,6],[223,34,550,6],[223,39,550,11,"props"],[223,44,550,6],[223,45,550,17,"customMapStyle"],[223,59,550,6],[223,64,550,36,"prevProps"],[223,73,550,45],[223,74,550,46,"customMapStyle"],[223,88,548,4],[223,90,551,6],[224,0,552,6],[224,15,552,11,"_updateStyle"],[224,27,552,6],[224,28,552,24],[224,33,552,29,"props"],[224,38,552,6],[225,0,553,5],[227,0,554,4],[227,15,554,11],[227,20,554,16,"props"],[227,25,554,11],[227,26,554,22,"region"],[227,32,554,11],[227,36,554,32],[227,40,554,4],[228,0,555,3],[231,41,557,21,"prevProps"],[231,50],[231,52,557,32,"prevState"],[231,61],[231,63,557,43,"region"],[231,69],[231,71,557,51],[232,0,558,4],[232,12,558,10,"a"],[232,13,558,11],[232,16,558,14],[232,21,558,19,"__lastRegion"],[232,33,558,4],[233,0,559,4],[233,12,559,10,"b"],[233,13,559,11],[233,16,559,14,"region"],[233,22,559,4],[235,0,560,4],[235,12,560,8],[235,13,560,9,"a"],[235,14,560,8],[235,18,560,14],[235,19,560,15,"b"],[235,20,560,4],[235,22,560,18],[236,0,561,6],[237,0,562,5],[239,0,563,4],[239,12,564,6,"a"],[239,13,564,7],[239,14,564,8,"latitude"],[239,22,564,6],[239,27,564,21,"b"],[239,28,564,22],[239,29,564,23,"latitude"],[239,37,564,6],[239,41,565,6,"a"],[239,42,565,7],[239,43,565,8,"longitude"],[239,52,565,6],[239,57,565,22,"b"],[239,58,565,23],[239,59,565,24,"longitude"],[239,68,564,6],[239,72,566,6,"a"],[239,73,566,7],[239,74,566,8,"latitudeDelta"],[239,87,566,6],[239,92,566,26,"b"],[239,93,566,27],[239,94,566,28,"latitudeDelta"],[239,107,564,6],[239,111,567,6,"a"],[239,112,567,7],[239,113,567,8,"longitudeDelta"],[239,127,567,6],[239,132,567,27,"b"],[239,133,567,28],[239,134,567,29,"longitudeDelta"],[239,148,563,4],[239,150,568,6],[240,0,569,6],[240,15,569,11,"map"],[240,18,569,6],[240,19,569,15,"setNativeProps"],[240,33,569,6],[240,34,569,30],[241,0,569,32,"region"],[241,12,569,32,"region"],[241,18,569,38],[241,20,569,40,"b"],[242,0,569,30],[242,11,569,6],[243,0,570,5],[244,0,571,3],[247,42,573,22],[248,0,573,22],[248,12,574,12,"isReady"],[248,19,573,22],[248,22,574,24],[248,27,574,29,"state"],[248,32,573,22],[248,33,574,12,"isReady"],[248,40,573,22],[250,0,575,4],[250,12,575,8,"isReady"],[250,19,575,4],[250,21,575,17],[251,0,576,6],[251,15,576,11,"_updateStyle"],[251,27,576,6],[251,28,576,24],[251,33,576,29,"props"],[251,38,576,6],[252,0,577,5],[253,0,578,3],[256,35,580,15,"props"],[256,40],[256,42,580,22],[257,0,580,22],[257,12,581,12,"customMapStyle"],[257,26,580,22],[257,29,581,31,"props"],[257,34,580,22],[257,35,581,12,"customMapStyle"],[257,49,580,22],[258,0,582,4],[258,13,582,9,"map"],[258,16,582,4],[258,17,582,13,"setNativeProps"],[258,31,582,4],[258,32,582,28],[259,0,583,6,"customMapStyleString"],[259,10,583,6,"customMapStyleString"],[259,30,583,26],[259,32,583,28,"JSON"],[259,36,583,32],[259,37,583,33,"stringify"],[259,46,583,28],[259,47,583,43,"customMapStyle"],[259,61,583,28],[260,0,582,28],[260,9,582,4],[261,0,585,3],[264,36,587,16],[265,0,587,16],[265,26,588,50],[265,31,588,55,"props"],[265,36,587,16],[266,0,587,16],[266,12,588,12,"region"],[266,18,587,16],[266,33,588,12,"region"],[266,39,587,16],[267,0,587,16],[267,12,588,20,"initialRegion"],[267,25,587,16],[267,40,588,20,"initialRegion"],[267,53,587,16],[268,0,587,16],[268,12,588,35,"onMapReady"],[268,22,587,16],[268,37,588,35,"onMapReady"],[268,47,587,16],[270,0,589,4],[270,12,589,8,"region"],[270,18,589,4],[270,20,589,16],[271,0,590,6],[271,15,590,11,"map"],[271,18,590,6],[271,19,590,15,"setNativeProps"],[271,33,590,6],[271,34,590,30],[272,0,590,32,"region"],[272,12,590,32,"region"],[272,18,590,38],[272,20,590,32,"region"],[273,0,590,30],[273,11,590,6],[274,0,591,5],[274,9,589,4],[274,15,591,11],[274,19,591,15,"initialRegion"],[274,32,591,11],[274,34,591,30],[275,0,592,6],[275,15,592,11,"map"],[275,18,592,6],[275,19,592,15,"setNativeProps"],[275,33,592,6],[275,34,592,30],[276,0,592,32,"initialRegion"],[276,12,592,32,"initialRegion"],[276,25,592,45],[276,27,592,32,"initialRegion"],[277,0,592,30],[277,11,592,6],[278,0,593,5],[280,0,594,4],[280,13,594,9,"_updateStyle"],[280,25,594,4],[280,26,594,22],[280,31,594,27,"props"],[280,36,594,4],[282,0,595,4],[282,13,595,9,"setState"],[282,21,595,4],[282,22,595,18],[283,0,595,20,"isReady"],[283,10,595,20,"isReady"],[283,17,595,27],[283,19,595,29],[284,0,595,18],[284,9,595,4],[284,11,595,37],[284,23,595,43],[285,0,596,6],[285,14,596,10,"onMapReady"],[285,24,596,6],[285,26,596,22],[286,0,597,8,"onMapReady"],[286,12,597,8,"onMapReady"],[286,22,597,18],[287,0,598,7],[288,0,599,5],[288,9,595,4],[289,0,600,3],[292,32,602,12,"e"],[292,33],[292,35,602,15],[293,0,602,15],[293,12,603,12,"layout"],[293,18,602,15],[293,21,603,23,"e"],[293,22,603,24],[293,23,603,25,"nativeEvent"],[293,34,602,15],[293,35,603,12,"layout"],[293,41,602,15],[295,0,604,4],[295,12,604,8],[295,13,604,9,"layout"],[295,19,604,15],[295,20,604,16,"width"],[295,25,604,8],[295,29,604,25],[295,30,604,26,"layout"],[295,36,604,32],[295,37,604,33,"height"],[295,43,604,4],[295,45,604,41],[296,0,605,6],[297,0,606,5],[299,0,607,4],[299,12,607,8],[299,17,607,13,"state"],[299,22,607,8],[299,23,607,19,"isReady"],[299,30,607,8],[299,34,607,30],[299,35,607,31],[299,40,607,36,"__layoutCalled"],[299,54,607,4],[299,56,607,52],[300,0,607,52],[300,29,608,40],[300,34,608,45,"props"],[300,39,607,52],[301,0,607,52],[301,14,608,14,"region"],[301,20,607,52],[301,36,608,14,"region"],[301,42,607,52],[302,0,607,52],[302,14,608,22,"initialRegion"],[302,27,607,52],[302,43,608,22,"initialRegion"],[302,56,607,52],[304,0,609,6],[304,14,609,10,"region"],[304,20,609,6],[304,22,609,18],[305,0,610,8],[305,17,610,13,"__layoutCalled"],[305,31,610,8],[305,34,610,30],[305,38,610,8],[306,0,611,8],[306,17,611,13,"map"],[306,20,611,8],[306,21,611,17,"setNativeProps"],[306,35,611,8],[306,36,611,32],[307,0,611,34,"region"],[307,14,611,34,"region"],[307,20,611,40],[307,22,611,34,"region"],[308,0,611,32],[308,13,611,8],[309,0,612,7],[309,11,609,6],[309,17,612,13],[309,21,612,17,"initialRegion"],[309,34,612,13],[309,36,612,32],[310,0,613,8],[310,17,613,13,"__layoutCalled"],[310,31,613,8],[310,34,613,30],[310,38,613,8],[311,0,614,8],[311,17,614,13,"map"],[311,20,614,8],[311,21,614,17,"setNativeProps"],[311,35,614,8],[311,36,614,32],[312,0,614,34,"initialRegion"],[312,14,614,34,"initialRegion"],[312,27,614,47],[312,29,614,34,"initialRegion"],[313,0,614,32],[313,13,614,8],[314,0,615,7],[315,0,616,5],[317,0,617,4],[317,12,617,8],[317,17,617,13,"props"],[317,22,617,8],[317,23,617,19,"onLayout"],[317,31,617,4],[317,33,617,29],[318,0,618,6],[318,15,618,11,"props"],[318,20,618,6],[318,21,618,17,"onLayout"],[318,29,618,6],[318,30,618,26,"e"],[318,31,618,6],[319,0,619,5],[320,0,620,3],[323,37,622,17,"event"],[323,42],[323,44,622,24],[324,0,623,4],[324,12,623,8],[324,17,623,13,"props"],[324,22,623,8],[324,23,623,19,"onMarkerPress"],[324,36,623,4],[324,38,623,34],[325,0,624,6],[325,15,624,11,"props"],[325,20,624,6],[325,21,624,17,"onMarkerPress"],[325,34,624,6],[325,35,624,31,"event"],[325,40,624,36],[325,41,624,37,"nativeEvent"],[325,52,624,6],[326,0,625,5],[327,0,626,3],[330,32,628,12,"event"],[330,37],[330,39,628,19],[331,0,629,4],[331,13,629,9,"__lastRegion"],[331,25,629,4],[331,28,629,24,"event"],[331,33,629,29],[331,34,629,30,"nativeEvent"],[331,45,629,24],[331,46,629,42,"region"],[331,52,629,4],[333,0,630,4],[333,12,630,8,"event"],[333,17,630,13],[333,18,630,14,"nativeEvent"],[333,29,630,8],[333,30,630,26,"continuous"],[333,40,630,4],[333,42,630,38],[334,0,631,6],[334,14,631,10],[334,19,631,15,"props"],[334,24,631,10],[334,25,631,21,"onRegionChange"],[334,39,631,6],[334,41,631,37],[335,0,632,8],[335,17,632,13,"props"],[335,22,632,8],[335,23,632,19,"onRegionChange"],[335,37,632,8],[335,38,632,34,"event"],[335,43,632,39],[335,44,632,40,"nativeEvent"],[335,55,632,34],[335,56,632,52,"region"],[335,62,632,8],[336,0,633,7],[337,0,634,5],[337,9,630,4],[337,15,634,11],[337,19,634,15],[337,24,634,20,"props"],[337,29,634,15],[337,30,634,26,"onRegionChangeComplete"],[337,52,634,11],[337,54,634,50],[338,0,635,6],[338,15,635,11,"props"],[338,20,635,6],[338,21,635,17,"onRegionChangeComplete"],[338,43,635,6],[338,44,635,40,"event"],[338,49,635,45],[338,50,635,46,"nativeEvent"],[338,61,635,40],[338,62,635,58,"region"],[338,68,635,6],[339,0,636,5],[340,0,637,3],[343,34,639,14],[344,0,640,4],[344,12,640,8,"Platform"],[344,34,640,17,"OS"],[344,36,640,8],[344,41,640,24],[344,50,640,4],[344,52,640,35],[345,0,641,6],[345,17,641,13,"NativeModules"],[345,44,641,27,"AirMapModule"],[345,56,641,13],[345,57,641,40,"getCamera"],[345,66,641,13],[345,67,641,50],[345,72,641,55,"_getHandle"],[345,82,641,50],[345,84,641,13],[345,85,641,6],[346,0,642,5],[346,9,640,4],[346,15,642,11],[346,19,642,15,"Platform"],[346,41,642,24,"OS"],[346,43,642,15],[346,48,642,31],[346,53,642,11],[346,55,642,38],[347,0,643,6],[347,17,643,13],[347,22,643,18,"_runCommand"],[347,33,643,13],[347,34,643,30],[347,45,643,13],[347,47,643,43],[347,49,643,13],[347,50,643,6],[348,0,644,5],[350,0,645,4],[350,15,645,11,"Promise"],[350,22,645,18],[350,23,645,19,"reject"],[350,29,645,11],[350,30,645,26],[350,72,645,11],[350,73,645,4],[351,0,646,3],[354,32,648,12,"camera"],[354,38],[354,40,648,20],[355,0,649,4],[355,13,649,9,"_runCommand"],[355,24,649,4],[355,25,649,21],[355,36,649,4],[355,38,649,34],[355,39,649,35,"camera"],[355,45,649,34],[355,46,649,4],[356,0,650,3],[359,36,652,16,"camera"],[359,42],[359,44,652,24,"opts"],[359,48],[359,50,652,30],[360,0,653,4],[360,13,653,9,"_runCommand"],[360,24,653,4],[360,25,653,21],[360,40,653,4],[360,42,653,38],[360,43,653,39,"camera"],[360,49,653,38],[360,51,653,48,"opts"],[360,55,653,52],[360,59,653,56,"opts"],[360,63,653,60],[360,64,653,61,"duration"],[360,72,653,47],[360,76,653,74],[360,79,653,38],[360,80,653,4],[361,0,654,3],[364,42,656,22,"location"],[364,50],[364,52,656,32,"bearing"],[364,59],[364,61,656,41,"angle"],[364,66],[364,68,656,48,"duration"],[364,76],[364,78,656,58],[365,0,657,4,"console"],[365,8,657,4,"console"],[365,15,657,11],[365,16,657,12,"warn"],[365,20,657,4],[365,21,658,6],[365,87,657,4],[367,0,660,4],[367,13,660,9,"_runCommand"],[367,24,660,4],[367,25,660,21],[367,46,660,4],[367,48,660,44],[367,49,661,6,"location"],[367,57,660,44],[367,59,662,6,"bearing"],[367,66,660,44],[367,68,663,6,"angle"],[367,73,660,44],[367,75,664,6,"duration"],[367,83,664,14],[367,87,664,18],[367,90,660,44],[367,91,660,4],[368,0,666,3],[371,38,668,18,"region"],[371,44],[371,46,668,26,"duration"],[371,54],[371,56,668,36],[372,0,669,4],[372,13,669,9,"_runCommand"],[372,24,669,4],[372,25,669,21],[372,42,669,4],[372,44,669,40],[372,45,669,41,"region"],[372,51,669,40],[372,53,669,49,"duration"],[372,61,669,57],[372,65,669,61],[372,68,669,40],[372,69,669,4],[373,0,670,3],[376,42,672,22,"latLng"],[376,48],[376,50,672,30,"duration"],[376,58],[376,60,672,40],[377,0,673,4,"console"],[377,8,673,4,"console"],[377,15,673,11],[377,16,673,12,"warn"],[377,20,673,4],[377,21,674,6],[377,87,673,4],[379,0,676,4],[379,13,676,9,"_runCommand"],[379,24,676,4],[379,25,676,21],[379,46,676,4],[379,48,676,44],[379,49,676,45,"latLng"],[379,55,676,44],[379,57,676,53,"duration"],[379,65,676,61],[379,69,676,65],[379,72,676,44],[379,73,676,4],[380,0,677,3],[383,39,679,19,"bearing"],[383,46],[383,48,679,28,"duration"],[383,56],[383,58,679,38],[384,0,680,4,"console"],[384,8,680,4,"console"],[384,15,680,11],[384,16,680,12,"warn"],[384,20,680,4],[384,21,681,6],[384,84,680,4],[386,0,683,4],[386,13,683,9,"_runCommand"],[386,24,683,4],[386,25,683,21],[386,43,683,4],[386,45,683,41],[386,46,683,42,"bearing"],[386,53,683,41],[386,55,683,51,"duration"],[386,63,683,59],[386,67,683,63],[386,70,683,41],[386,71,683,4],[387,0,684,3],[390,44,686,24,"angle"],[390,49],[390,51,686,31,"duration"],[390,59],[390,61,686,41],[391,0,687,4,"console"],[391,8,687,4,"console"],[391,15,687,11],[391,16,687,12,"warn"],[391,20,687,4],[391,21,688,6],[391,89,687,4],[393,0,690,4],[393,13,690,9,"_runCommand"],[393,24,690,4],[393,25,690,21],[393,48,690,4],[393,50,690,46],[393,51,690,47,"angle"],[393,56,690,46],[393,58,690,54,"duration"],[393,66,690,62],[393,70,690,66],[393,73,690,46],[393,74,690,4],[394,0,691,3],[397,36,693,16,"animated"],[397,44],[397,46,693,26],[398,0,694,4],[398,13,694,9,"_runCommand"],[398,24,694,4],[398,25,694,21],[398,40,694,4],[398,42,694,38],[398,43,694,39,"animated"],[398,51,694,38],[398,52,694,4],[399,0,695,3],[402,43,697,23,"markers"],[402,50],[402,52,697,46],[403,0,697,46],[403,12,697,32,"options"],[403,19,697,46],[403,90,697,42],[403,92,697,46],[404,0,697,46],[404,35,701,8,"options"],[404,42,697,46],[404,43,699,6,"edgePadding"],[404,54,697,46],[405,0,697,46],[405,12,699,6,"edgePadding"],[405,23,697,46],[405,60,699,20],[406,0,699,22,"top"],[406,10,699,22,"top"],[406,13,699,25],[406,15,699,27],[406,16,699,20],[407,0,699,30,"right"],[407,10,699,30,"right"],[407,15,699,35],[407,17,699,37],[407,18,699,20],[408,0,699,40,"bottom"],[408,10,699,40,"bottom"],[408,16,699,46],[408,18,699,48],[408,19,699,20],[409,0,699,51,"left"],[409,10,699,51,"left"],[409,14,699,55],[409,16,699,57],[410,0,699,20],[410,9,697,46],[411,0,697,46],[411,32,701,8,"options"],[411,39,697,46],[411,40,700,6,"animated"],[411,48,697,46],[412,0,697,46],[412,12,700,6,"animated"],[412,20,697,46],[412,54,700,17],[412,58,697,46],[414,0,703,4],[414,13,703,9,"_runCommand"],[414,24,703,4],[414,25,703,21],[414,47,703,4],[414,49,703,45],[414,50,703,46,"markers"],[414,57,703,45],[414,59,703,55,"edgePadding"],[414,70,703,45],[414,72,703,68,"animated"],[414,80,703,45],[414,81,703,4],[415,0,704,3],[418,41,706,51],[419,0,706,51],[419,12,706,19,"coordinates"],[419,23,706,51],[419,94,706,33],[419,96,706,51],[420,0,706,51],[420,12,706,37,"options"],[420,19,706,51],[420,90,706,47],[420,92,706,51],[421,0,706,51],[421,36,710,8,"options"],[421,43,706,51],[421,44,708,6,"edgePadding"],[421,55,706,51],[422,0,706,51],[422,12,708,6,"edgePadding"],[422,23,706,51],[422,61,708,20],[423,0,708,22,"top"],[423,10,708,22,"top"],[423,13,708,25],[423,15,708,27],[423,16,708,20],[424,0,708,30,"right"],[424,10,708,30,"right"],[424,15,708,35],[424,17,708,37],[424,18,708,20],[425,0,708,40,"bottom"],[425,10,708,40,"bottom"],[425,16,708,46],[425,18,708,48],[425,19,708,20],[426,0,708,51,"left"],[426,10,708,51,"left"],[426,14,708,55],[426,16,708,57],[427,0,708,20],[427,9,706,51],[428,0,706,51],[428,33,710,8,"options"],[428,40,706,51],[428,41,709,6,"animated"],[428,49,706,51],[429,0,706,51],[429,12,709,6,"animated"],[429,20,706,51],[429,55,709,17],[429,59,706,51],[431,0,712,4],[431,13,712,9,"_runCommand"],[431,24,712,4],[431,25,712,21],[431,43,712,4],[431,45,712,41],[431,46,712,42,"coordinates"],[431,57,712,41],[431,59,712,55,"edgePadding"],[431,70,712,41],[431,72,712,68,"animated"],[431,80,712,41],[431,81,712,4],[432,0,713,3],[440,22,721,8,"Platform"],[440,44,721,17,"OS"],[440,46,721,8],[440,51,721,24],[440,60],[446,50,722,19,"NativeModules"],[446,77,722,33,"AirMapModule"],[446,89,722,19],[446,90,722,46,"getMapBoundaries"],[446,106,722,19],[446,107,723,8],[446,112,723,13,"_getHandle"],[446,122,723,8],[446,124,722,19],[446,125],[452,22,725,15,"Platform"],[452,44,725,24,"OS"],[452,46,725,15],[452,51,725,31],[452,56],[458,50,726,19],[458,55,726,24,"_runCommand"],[458,66,726,19],[458,67,726,36],[458,85,726,19],[458,87,726,56],[458,89,726,19],[458,90],[464,49,728,11,"Promise"],[464,56,728,18],[464,57,728,19,"reject"],[464,63,728,11],[464,64,728,26],[464,113,728,11],[464,114],[475,39,731,19,"northEast"],[475,48],[475,50,731,30,"southWest"],[475,59],[475,61,731,41],[476,0,732,4],[476,13,732,9,"_runCommand"],[476,24,732,4],[476,25,732,21],[476,43,732,4],[476,45,732,41],[476,46,732,42,"northEast"],[476,55,732,41],[476,57,732,53,"southWest"],[476,66,732,41],[476,67,732,4],[477,0,733,3],[480,48,735,28,"activeLevelIndex"],[480,64],[480,66,735,46],[481,0,736,4],[481,13,736,9,"_runCommand"],[481,24,736,4],[481,25,736,21],[481,52,736,4],[481,54,736,50],[481,55,736,51,"activeLevelIndex"],[481,71,736,50],[481,72,736,4],[482,0,737,3],[485,35,753,15,"args"],[485,39],[485,41,753,21],[486,0,753,21],[488,0,757,4],[488,12,757,8,"Platform"],[488,34,757,17,"OS"],[488,36,757,8],[488,41,757,24],[488,46,757,8],[488,50,757,33,"arguments"],[488,59,757,42],[488,60,757,43,"length"],[488,66,757,33],[488,71,757,54],[488,72,757,4],[488,74,757,57],[489,0,758,6,"console"],[489,10,758,6,"console"],[489,17,758,13],[489,18,758,14,"warn"],[489,22,758,6],[489,23,759,8],[489,101,758,6],[490,0,761,6],[490,14,761,12,"width"],[490,19,761,17],[490,22,761,20,"arguments"],[490,31,761,29],[490,32,761,30],[490,33,761,29],[490,34,761,6],[491,0,762,6],[491,14,762,12,"height"],[491,20,762,18],[491,23,762,21,"arguments"],[491,32,762,30],[491,33,762,31],[491,34,762,30],[491,35,762,6],[492,0,763,6],[492,14,763,12,"region"],[492,20,763,18],[492,23,763,21,"arguments"],[492,32,763,30],[492,33,763,31],[492,34,763,30],[492,35,763,6],[493,0,764,6],[493,14,764,12,"callback"],[493,22,764,20],[493,25,764,23,"arguments"],[493,34,764,32],[493,35,764,33],[493,36,764,32],[493,37,764,6],[495,0,765,6],[495,15,765,11,"_runCommand"],[495,26,765,6],[495,27,765,23],[495,41,765,6],[495,43,765,39],[495,44,766,8,"width"],[495,49,766,13],[495,53,766,17],[495,54,765,39],[495,56,767,8,"height"],[495,62,767,14],[495,66,767,18],[495,67,765,39],[495,69,768,8,"region"],[495,75,768,14],[495,79,768,18],[495,81,765,39],[495,83,769,8],[495,88,765,39],[495,90,770,8],[495,91,765,39],[495,93,771,8],[495,101,765,39],[495,103,772,8,"callback"],[495,111,765,39],[495,112,765,6],[497,0,774,6],[497,17,774,13,"undefined"],[497,26,774,6],[498,0,775,5],[500,0,778,4],[500,12,778,10,"config"],[500,18,778,16],[500,21,778,19],[501,0,779,6,"width"],[501,10,779,6,"width"],[501,15,779,11],[501,17,779,13,"args"],[501,21,779,17],[501,22,779,18,"width"],[501,27,779,13],[501,31,779,27],[501,32,778,19],[502,0,780,6,"height"],[502,10,780,6,"height"],[502,16,780,12],[502,18,780,14,"args"],[502,22,780,18],[502,23,780,19,"height"],[502,29,780,14],[502,33,780,29],[502,34,778,19],[503,0,781,6,"region"],[503,10,781,6,"region"],[503,16,781,12],[503,18,781,14,"args"],[503,22,781,18],[503,23,781,19,"region"],[503,29,781,14],[503,33,781,29],[503,35,778,19],[504,0,782,6,"format"],[504,10,782,6,"format"],[504,16,782,12],[504,18,782,14,"args"],[504,22,782,18],[504,23,782,19,"format"],[504,29,782,14],[504,33,782,29],[504,38,778,19],[505,0,783,6,"quality"],[505,10,783,6,"quality"],[505,17,783,13],[505,19,783,15,"args"],[505,23,783,19],[505,24,783,20,"quality"],[505,31,783,15],[505,35,783,31],[505,38,778,19],[506,0,784,6,"result"],[506,10,784,6,"result"],[506,16,784,12],[506,18,784,14,"args"],[506,22,784,18],[506,23,784,19,"result"],[506,29,784,14],[506,33,784,29],[507,0,778,19],[507,9,778,4],[509,0,786,4],[509,12,786,8,"config"],[509,18,786,14],[509,19,786,15,"format"],[509,25,786,8],[509,30,786,26],[509,35,786,8],[509,39,786,35,"config"],[509,45,786,41],[509,46,786,42,"format"],[509,52,786,35],[509,57,786,53],[509,62,786,4],[509,64,786,60],[510,0,787,6],[510,16,787,12],[510,20,787,16,"Error"],[510,25,787,12],[510,26,787,22],[510,52,787,12],[510,53,787,6],[511,0,788,5],[513,0,789,4],[513,12,789,8,"config"],[513,18,789,14],[513,19,789,15,"result"],[513,25,789,8],[513,30,789,26],[513,36,789,8],[513,40,789,36,"config"],[513,46,789,42],[513,47,789,43,"result"],[513,53,789,36],[513,58,789,54],[513,66,789,4],[513,68,789,64],[514,0,790,6],[514,16,790,12],[514,20,790,16,"Error"],[514,25,790,12],[514,26,790,22],[514,52,790,12],[514,53,790,6],[515,0,791,5],[517,0,794,4],[517,12,794,8,"Platform"],[517,34,794,17,"OS"],[517,36,794,8],[517,41,794,24],[517,50,794,4],[517,52,794,35],[518,0,795,6],[518,17,795,13,"NativeModules"],[518,44,795,27,"AirMapModule"],[518,56,795,13],[518,57,795,40,"takeSnapshot"],[518,69,795,13],[518,70,795,53],[518,75,795,58,"_getHandle"],[518,85,795,53],[518,87,795,13],[518,89,795,72,"config"],[518,95,795,13],[518,96,795,6],[519,0,796,5],[519,9,794,4],[519,15,796,11],[519,19,796,15,"Platform"],[519,41,796,24,"OS"],[519,43,796,15],[519,48,796,31],[519,53,796,11],[519,55,796,38],[520,0,797,6],[520,17,797,13],[520,21,797,17,"Promise"],[520,28,797,13],[520,29,797,25],[520,39,797,26,"resolve"],[520,46,797,25],[520,48,797,35,"reject"],[520,54,797,25],[520,56,797,46],[521,0,798,8],[521,12,798,8],[521,18,798,12],[521,19,798,13,"_runCommand"],[521,30,798,8],[521,31,798,25],[521,45,798,8],[521,47,798,41],[521,48,799,10,"config"],[521,54,799,16],[521,55,799,17,"width"],[521,60,798,41],[521,62,800,10,"config"],[521,68,800,16],[521,69,800,17,"height"],[521,75,798,41],[521,77,801,10,"config"],[521,83,801,16],[521,84,801,17,"region"],[521,90,798,41],[521,92,802,10,"config"],[521,98,802,16],[521,99,802,17,"format"],[521,105,798,41],[521,107,803,10,"config"],[521,113,803,16],[521,114,803,17,"quality"],[521,121,798,41],[521,123,804,10,"config"],[521,129,804,16],[521,130,804,17,"result"],[521,136,798,41],[521,138,805,10],[521,148,805,11,"err"],[521,151,805,10],[521,153,805,16,"snapshot"],[521,161,805,10],[521,163,805,29],[522,0,806,12],[522,18,806,16,"err"],[522,21,806,12],[522,23,806,21],[523,0,807,14,"reject"],[523,16,807,14,"reject"],[523,22,807,20],[523,23,807,21,"err"],[523,26,807,20],[523,27,807,14],[524,0,808,13],[524,15,806,12],[524,21,808,19],[525,0,809,14,"resolve"],[525,16,809,14,"resolve"],[525,23,809,21],[525,24,809,22,"snapshot"],[525,32,809,21],[525,33,809,14],[526,0,810,13],[527,0,811,11],[527,13,798,41],[527,14,798,8],[528,0,813,7],[528,11,797,13],[528,12,797,6],[529,0,814,5],[531,0,815,4],[531,15,815,11,"Promise"],[531,22,815,18],[531,23,815,19,"reject"],[531,29,815,11],[531,30,815,26],[531,75,815,11],[531,76,815,4],[532,0,816,3],[535,41,827,21,"coordinate"],[535,51],[535,53,827,33],[536,0,828,4],[536,12,828,8,"Platform"],[536,34,828,17,"OS"],[536,36,828,8],[536,41,828,24],[536,50,828,4],[536,52,828,35],[537,0,829,6],[537,17,829,13,"NativeModules"],[537,44,829,27,"AirMapModule"],[537,56,829,13],[537,57,829,40,"pointForCoordinate"],[537,75,829,13],[537,76,830,8],[537,81,830,13,"_getHandle"],[537,91,830,8],[537,93,829,13],[537,95,831,8,"coordinate"],[537,105,829,13],[537,106,829,6],[538,0,833,5],[538,9,828,4],[538,15,833,11],[538,19,833,15,"Platform"],[538,41,833,24,"OS"],[538,43,833,15],[538,48,833,31],[538,53,833,11],[538,55,833,38],[539,0,834,6],[539,17,834,13],[539,22,834,18,"_runCommand"],[539,33,834,13],[539,34,834,30],[539,54,834,13],[539,56,834,52],[539,57,834,53,"coordinate"],[539,67,834,52],[539,68,834,13],[539,69,834,6],[540,0,835,5],[542,0,836,4],[542,15,836,11,"Promise"],[542,22,836,18],[542,23,836,19,"reject"],[542,29,836,11],[542,30,836,26],[542,81,836,11],[542,82,836,4],[543,0,837,3],[546,41,848,21,"point"],[546,46],[546,48,848,28],[547,0,849,4],[547,12,849,8,"Platform"],[547,34,849,17,"OS"],[547,36,849,8],[547,41,849,24],[547,50,849,4],[547,52,849,35],[548,0,850,6],[548,17,850,13,"NativeModules"],[548,44,850,27,"AirMapModule"],[548,56,850,13],[548,57,850,40,"coordinateForPoint"],[548,75,850,13],[548,76,851,8],[548,81,851,13,"_getHandle"],[548,91,851,8],[548,93,850,13],[548,95,852,8,"point"],[548,100,850,13],[548,101,850,6],[549,0,854,5],[549,9,849,4],[549,15,854,11],[549,19,854,15,"Platform"],[549,41,854,24,"OS"],[549,43,854,15],[549,48,854,31],[549,53,854,11],[549,55,854,38],[550,0,855,6],[550,17,855,13],[550,22,855,18,"_runCommand"],[550,33,855,13],[550,34,855,30],[550,54,855,13],[550,56,855,52],[550,57,855,53,"point"],[550,62,855,52],[550,63,855,13],[550,64,855,6],[551,0,856,5],[553,0,857,4],[553,15,857,11,"Promise"],[553,22,857,18],[553,23,857,19,"reject"],[553,29,857,11],[553,30,857,26],[553,81,857,11],[553,82,857,4],[554,0,858,3],[557,41,867,40],[558,0,867,40],[558,12,867,19,"onlyVisible"],[558,23,867,40],[558,94,867,33],[558,99,867,40],[560,0,868,4],[560,12,868,8,"Platform"],[560,34,868,17,"OS"],[560,36,868,8],[560,41,868,24],[560,46,868,4],[560,48,868,31],[561,0,869,6],[561,17,869,13],[561,22,869,18,"_runCommand"],[561,33,869,13],[561,34,869,30],[561,52,869,13],[561,54,869,50],[561,55,869,51,"onlyVisible"],[561,66,869,50],[561,67,869,13],[561,68,869,6],[562,0,870,5],[564,0,871,4],[564,15,871,11,"Promise"],[564,22,871,18],[564,23,871,19,"reject"],[564,29,871,11],[564,30,871,26],[564,79,871,11],[564,80,871,4],[565,0,872,3],[568,43,881,23,"region"],[568,49],[568,51,881,31],[569,0,882,4],[569,15,882,11],[570,0,883,6,"northEast"],[570,10,883,6,"northEast"],[570,19,883,15],[570,21,883,17],[571,0,884,8,"latitude"],[571,12,884,8,"latitude"],[571,20,884,16],[571,22,884,18,"region"],[571,28,884,24],[571,29,884,25,"latitude"],[571,37,884,18],[571,40,884,36,"region"],[571,46,884,42],[571,47,884,43,"latitudeDelta"],[571,60,884,36],[571,63,884,59],[571,64,883,17],[572,0,885,8,"longitude"],[572,12,885,8,"longitude"],[572,21,885,17],[572,23,885,19,"region"],[572,29,885,25],[572,30,885,26,"longitude"],[572,39,885,19],[572,42,885,38,"region"],[572,48,885,44],[572,49,885,45,"longitudeDelta"],[572,63,885,38],[572,66,885,62],[573,0,883,17],[573,11,882,11],[574,0,887,6,"southWest"],[574,10,887,6,"southWest"],[574,19,887,15],[574,21,887,17],[575,0,888,8,"latitude"],[575,12,888,8,"latitude"],[575,20,888,16],[575,22,888,18,"region"],[575,28,888,24],[575,29,888,25,"latitude"],[575,37,888,18],[575,40,888,36,"region"],[575,46,888,42],[575,47,888,43,"latitudeDelta"],[575,60,888,36],[575,63,888,59],[575,64,887,17],[576,0,889,8,"longitude"],[576,12,889,8,"longitude"],[576,21,889,17],[576,23,889,19,"region"],[576,29,889,25],[576,30,889,26,"longitude"],[576,39,889,19],[576,42,889,38,"region"],[576,48,889,44],[576,49,889,45,"longitudeDelta"],[576,63,889,38],[576,66,889,62],[577,0,887,17],[578,0,882,11],[578,9,882,4],[579,0,892,3],[582,40,894,20,"name"],[582,44],[582,46,894,26],[583,0,895,4],[583,12,895,10,"UIManager"],[583,21,895,19],[583,24,895,22,"NativeModules"],[583,51,895,36,"UIManager"],[583,60,895,4],[584,0,896,4],[584,12,896,10,"componentName"],[584,25,896,23],[584,28,896,26],[584,69,896,40],[584,74,896,45,"props"],[584,79,896,40],[584,80,896,51,"provider"],[584,88,896,26],[584,89,896,4],[586,0,898,4],[586,12,898,8],[586,13,898,9,"UIManager"],[586,22,898,18],[586,23,898,19,"getViewManagerConfig"],[586,43,898,4],[586,45,898,41],[587,0,900,6],[587,17,900,13,"UIManager"],[587,26,900,22],[587,27,900,23,"componentName"],[587,40,900,22],[587,41,900,13],[587,42,900,38,"Commands"],[587,50,900,13],[587,51,900,47,"name"],[587,55,900,13],[587,56,900,6],[588,0,901,5],[590,0,904,4],[590,15,904,11,"UIManager"],[590,24,904,20],[590,25,904,21,"getViewManagerConfig"],[590,45,904,11],[590,46,904,42,"componentName"],[590,59,904,11],[590,61,904,57,"Commands"],[590,69,904,11],[590,70,904,66,"name"],[590,74,904,11],[590,75,904,4],[591,0,905,3],[594,41,907,21,"name"],[594,45],[594,47,907,27],[595,0,908,4],[595,12,908,10,"managerName"],[595,23,908,21],[595,26,908,24],[595,67,908,38],[595,72,908,43,"props"],[595,77,908,38],[595,78,908,49,"provider"],[595,86,908,24],[595,87,908,4],[597,0,910,4],[597,12,910,8,"managerName"],[597,23,910,19],[597,28,910,24],[597,32,910,4],[597,34,910,30],[598,0,911,6],[598,14,911,12,"UIManager"],[598,23,911,21],[598,26,911,24,"NativeModules"],[598,53,911,38,"UIManager"],[598,62,911,6],[600,0,912,6],[600,14,912,10],[600,15,912,11,"UIManager"],[600,24,912,20],[600,25,912,21,"getViewManagerConfig"],[600,45,912,6],[600,47,912,43],[601,0,914,8],[601,19,914,15,"UIManager"],[601,28,914,24],[601,29,914,25,"name"],[601,33,914,24],[601,34,914,8],[602,0,915,7],[604,0,918,6],[604,17,918,13,"UIManager"],[604,26,918,22],[604,27,918,23,"getViewManagerConfig"],[604,47,918,13],[604,48,918,44,"name"],[604,52,918,13],[604,53,918,6],[605,0,919,5],[607,0,921,4],[607,15,921,11,"NativeModules"],[607,42,921,28],[607,83,921,42],[607,88,921,47,"props"],[607,93,921,42],[607,94,921,53,"provider"],[607,102,921,28],[607,103,921,11],[607,117,921,73,"name"],[607,121,921,11],[607,122,921,4],[608,0,922,3],[611,35,924,15],[612,0,925,4],[612,15,925,11],[612,48,925,26],[612,53,925,31,"map"],[612,56,925,11],[612,57,925,4],[613,0,926,3],[616,34,928,14,"name"],[616,38],[616,40,928,20,"args"],[616,44],[616,46,928,26],[617,0,929,4],[617,16,929,12,"Platform"],[617,38,929,21,"OS"],[617,40,929,4],[618,0,930,6],[618,15,930,11],[618,24,930,6],[619,0,931,8],[619,19,931,15,"NativeModules"],[619,46,931,29,"UIManager"],[619,55,931,15],[619,56,931,39,"dispatchViewManagerCommand"],[619,82,931,15],[619,83,932,10],[619,88,932,15,"_getHandle"],[619,98,932,10],[619,100,931,15],[619,102,933,10],[619,107,933,15,"_uiManagerCommand"],[619,124,933,10],[619,125,933,33,"name"],[619,129,933,10],[619,130,931,15],[619,132,934,10,"args"],[619,136,931,15],[619,137,931,8],[621,0,937,6],[621,15,937,11],[621,20,937,6],[622,0,938,8],[622,19,938,15],[622,24,938,20,"_mapManagerCommand"],[622,42,938,15],[622,43,938,39,"name"],[622,47,938,15],[622,64,938,45],[622,69,938,50,"_getHandle"],[622,79,938,45],[622,81,938,15],[622,123,938,67,"args"],[622,127,938,15],[622,130,938,8],[624,0,940,6],[625,0,941,8],[625,19,941,15,"Promise"],[625,26,941,22],[625,27,941,23,"reject"],[625,33,941,15],[625,68,941,62,"Platform"],[625,90,941,71,"OS"],[625,92,941,15],[625,93,941,8],[626,0,929,4],[627,0,943,3],[630,31,945,11],[631,0,945,11],[633,0,946,4],[633,12,946,8,"props"],[633,17,946,4],[635,0,948,4],[635,12,948,8],[635,17,948,13,"state"],[635,22,948,8],[635,23,948,19,"isReady"],[635,30,948,4],[635,32,948,28],[636,0,949,6,"props"],[636,10,949,6,"props"],[636,15,949,11],[637,0,950,8,"region"],[637,12,950,8,"region"],[637,18,950,14],[637,20,950,16],[637,24,949,11],[638,0,951,8,"initialRegion"],[638,12,951,8,"initialRegion"],[638,25,951,21],[638,27,951,23],[638,31,949,11],[639,0,952,8,"onMarkerPress"],[639,12,952,8,"onMarkerPress"],[639,25,952,21],[639,27,952,23],[639,32,952,28,"_onMarkerPress"],[639,46,949,11],[640,0,953,8,"onChange"],[640,12,953,8,"onChange"],[640,20,953,16],[640,22,953,18],[640,27,953,23,"_onChange"],[640,36,949,11],[641,0,954,8,"onMapReady"],[641,12,954,8,"onMapReady"],[641,22,954,18],[641,24,954,20],[641,29,954,25,"_onMapReady"],[641,40,949,11],[642,0,955,8,"onLayout"],[642,12,955,8,"onLayout"],[642,20,955,16],[642,22,955,18],[642,27,955,23,"_onLayout"],[643,0,949,11],[643,13,956,11],[643,18,956,16,"props"],[643,23,949,11],[643,24,949,6],[645,0,958,6],[645,14,959,8,"Platform"],[645,36,959,17,"OS"],[645,38,959,8],[645,43,959,24],[645,48,959,8],[645,52,960,8,"props"],[645,57,960,13],[645,58,960,14,"provider"],[645,66,960,8],[645,71,960,27,"ProviderConstants"],[645,88,960,44],[645,89,960,45,"PROVIDER_DEFAULT"],[645,105,959,8],[645,109,961,8,"GOOGLE_MAPS_ONLY_TYPES"],[645,131,961,30],[645,132,961,31,"includes"],[645,140,961,8],[645,141,961,40,"props"],[645,146,961,45],[645,147,961,46,"mapType"],[645,154,961,8],[645,155,958,6],[645,157,962,8],[646,0,963,8,"props"],[646,12,963,8,"props"],[646,17,963,13],[646,18,963,14,"mapType"],[646,25,963,8],[646,28,963,24,"MAP_TYPES"],[646,37,963,33],[646,38,963,34,"standard"],[646,46,963,8],[647,0,964,7],[649,0,965,6,"props"],[649,10,965,6,"props"],[649,15,965,11],[649,16,965,12,"handlePanDrag"],[649,29,965,6],[649,32,965,28],[649,33,965,29],[649,34,965,30,"props"],[649,39,965,35],[649,40,965,36,"onPanDrag"],[649,49,965,6],[650,0,966,5],[650,9,948,4],[650,15,966,11],[651,0,967,6,"props"],[651,10,967,6,"props"],[651,15,967,11],[651,18,967,14],[652,0,968,8,"style"],[652,12,968,8,"style"],[652,17,968,13],[652,19,968,15],[652,24,968,20,"props"],[652,29,968,15],[652,30,968,26,"style"],[652,35,967,14],[653,0,969,8,"region"],[653,12,969,8,"region"],[653,18,969,14],[653,20,969,16],[653,24,967,14],[654,0,970,8,"initialRegion"],[654,12,970,8,"initialRegion"],[654,25,970,21],[654,27,970,23],[654,31,967,14],[655,0,971,8,"onMarkerPress"],[655,12,971,8,"onMarkerPress"],[655,25,971,21],[655,27,971,23],[655,32,971,28,"_onMarkerPress"],[655,46,967,14],[656,0,972,8,"onChange"],[656,12,972,8,"onChange"],[656,20,972,16],[656,22,972,18],[656,27,972,23,"_onChange"],[656,36,967,14],[657,0,973,8,"onMapReady"],[657,12,973,8,"onMapReady"],[657,22,973,18],[657,24,973,20],[657,29,973,25,"_onMapReady"],[657,40,967,14],[658,0,974,8,"onLayout"],[658,12,974,8,"onLayout"],[658,20,974,16],[658,22,974,18],[658,27,974,23,"_onLayout"],[659,0,967,14],[659,11,967,6],[660,0,976,5],[662,0,978,4],[662,12,978,8,"Platform"],[662,34,978,17,"OS"],[662,36,978,8],[662,41,978,24],[662,50,978,8],[662,54,978,37],[662,59,978,42,"props"],[662,64,978,37],[662,65,978,48,"liteMode"],[662,73,978,4],[662,75,978,58],[663,0,979,6],[663,17,980,8],[663,46,980,9],[663,56,980,8],[664,0,981,10],[664,12,981,10],[664,15,981,13],[664,17,981,15],[664,30,981,15,"ref"],[664,34,981,18],[664,36,981,22],[665,0,982,12],[665,14,982,12],[665,20,982,16],[665,21,982,17,"map"],[665,24,982,12],[665,27,982,23,"ref"],[665,31,982,12],[666,0,983,11],[667,0,980,8],[667,13,984,14,"props"],[667,18,980,8],[668,0,980,8],[669,0,980,8],[670,0,980,8],[671,0,980,8],[672,0,980,8],[672,13,979,6],[673,0,987,5],[675,0,989,4],[675,12,989,10,"AIRMap"],[675,18,989,16],[675,21,989,19,"getAirMapComponent"],[675,39,989,37],[675,40,989,38],[675,45,989,43,"props"],[675,50,989,38],[675,51,989,49,"provider"],[675,59,989,37],[675,60,989,4],[676,0,991,4],[676,15,992,6],[676,44,992,7],[676,50,992,6],[677,0,993,8],[677,10,993,8],[677,13,993,11],[677,15,993,13],[677,28,993,13,"ref"],[677,33,993,16],[677,35,993,20],[678,0,994,10],[678,12,994,10],[678,18,994,14],[678,19,994,15,"map"],[678,22,994,10],[678,25,994,21,"ref"],[678,30,994,10],[679,0,995,9],[680,0,992,6],[680,11,996,12,"props"],[680,16,992,6],[681,0,992,6],[682,0,992,6],[683,0,992,6],[684,0,992,6],[685,0,992,6],[685,11,991,4],[686,0,999,3],[689,4,529,22,"React"],[689,19,529,28,"Component"],[689,28],[692,0,1002,0,"MapView"],[692,2,1002,0,"MapView"],[692,9,1002,7],[692,10,1002,8,"propTypes"],[692,19,1002,0],[692,22,1002,20,"propTypes"],[692,31,1002,0],[693,0,1003,0,"MapView"],[693,2,1003,0,"MapView"],[693,9,1003,7],[693,10,1003,8,"viewConfig"],[693,20,1003,0],[693,23,1003,21,"viewConfig"],[693,33,1003,0],[694,0,1004,0,"MapView"],[694,2,1004,0,"MapView"],[694,9,1004,7],[694,10,1004,8,"childContextTypes"],[694,27,1004,0],[694,30,1004,28,"childContextTypes"],[694,64,1004,0],[695,0,1006,0,"MapView"],[695,2,1006,0,"MapView"],[695,9,1006,7],[695,10,1006,8,"MAP_TYPES"],[695,19,1006,0],[695,22,1006,20,"MAP_TYPES"],[695,31,1006,0],[697,0,1008,0],[697,6,1008,6,"nativeComponent"],[697,21,1008,21],[697,24,1008,24],[697,33,1008,6,"nativeComponent"],[697,48,1008,24],[697,49,1008,24,"Component"],[697,58,1008,33],[698,0,1008,33],[698,11,1009,2],[698,52,1009,25,"Component"],[698,61,1009,2],[698,63,1009,36,"MapView"],[698,70,1009,2],[698,72,1009,45],[699,0,1010,4,"nativeOnly"],[699,6,1010,4,"nativeOnly"],[699,16,1010,14],[699,18,1010,16],[700,0,1011,6,"onChange"],[700,8,1011,6,"onChange"],[700,16,1011,14],[700,18,1011,16],[700,22,1010,16],[701,0,1012,6,"onMapReady"],[701,8,1012,6,"onMapReady"],[701,18,1012,16],[701,20,1012,18],[701,24,1010,16],[702,0,1013,6,"onKmlReady"],[702,8,1013,6,"onKmlReady"],[702,18,1013,16],[702,20,1013,18],[702,24,1010,16],[703,0,1014,6,"handlePanDrag"],[703,8,1014,6,"handlePanDrag"],[703,21,1014,19],[703,23,1014,21],[704,0,1010,16],[705,0,1009,45],[705,5,1009,2],[705,6,1008,33],[706,0,1008,33],[706,3,1008,0],[708,0,1017,0],[708,6,1017,6,"airMaps"],[708,13,1017,13],[708,16,1017,16],[709,0,1018,2,"default"],[709,4,1018,2,"default"],[709,11,1018,9],[709,13,1018,11,"nativeComponent"],[709,28,1018,26],[709,29,1018,27],[709,37,1018,26],[710,0,1017,16],[710,3,1017,0],[712,0,1020,0],[712,6,1020,4,"Platform"],[712,28,1020,13,"OS"],[712,30,1020,4],[712,35,1020,20],[712,44,1020,0],[712,46,1020,31],[713,0,1021,2,"airMaps"],[713,4,1021,2,"airMaps"],[713,11,1021,9],[713,12,1021,10,"google"],[713,18,1021,2],[713,21,1021,19,"airMaps"],[713,28,1021,26],[713,29,1021,27,"default"],[713,36,1021,2],[714,0,1022,1],[714,3,1020,0],[714,9,1022,7],[715,0,1023,2,"airMaps"],[715,4,1023,2,"airMaps"],[715,11,1023,9],[715,12,1023,10,"google"],[715,18,1023,2],[715,21,1023,19,"googleMapIsInstalled"],[715,66,1024,6,"nativeComponent"],[715,81,1024,21],[715,82,1024,22],[715,96,1024,21],[715,97,1023,19],[715,100,1025,6],[715,155,1026,8],[715,259,1025,6],[715,260,1023,2],[716,0,1028,1],[718,0,1029,0],[718,6,1029,6,"getAirMapComponent"],[718,24,1029,24],[718,27,1029,27],[718,36,1029,6,"getAirMapComponent"],[718,54,1029,27],[718,55,1029,27,"provider"],[718,63,1029,35],[719,0,1029,35],[719,11,1029,39,"airMaps"],[719,18,1029,46],[719,19,1029,47,"provider"],[719,27,1029,55],[719,31,1029,59],[719,40,1029,46],[719,41,1029,35],[720,0,1029,35],[720,3,1029,0],[722,0,1031,0],[722,6,1031,4,"AIRMapLite"],[722,16,1031,0],[724,0,1032,0],[724,6,1032,4],[724,7,1032,5,"NativeModules"],[724,34,1032,19,"UIManager"],[724,43,1032,5],[724,44,1032,29,"getViewManagerConfig"],[724,64,1032,0],[724,66,1032,51],[725,0,1034,2,"AIRMapLite"],[725,4,1034,2,"AIRMapLite"],[725,14,1034,12],[725,17,1035,4,"NativeModules"],[725,44,1035,18,"UIManager"],[725,53,1035,4],[725,54,1035,28,"AIRMapLite"],[725,64,1035,4],[725,68,1036,4],[725,109,1036,27],[725,121,1036,4],[725,123,1036,41,"MapView"],[725,130,1036,4],[725,132,1036,50],[726,0,1037,6,"nativeOnly"],[726,6,1037,6,"nativeOnly"],[726,16,1037,16],[726,18,1037,18],[727,0,1038,8,"onChange"],[727,8,1038,8,"onChange"],[727,16,1038,16],[727,18,1038,18],[727,22,1037,18],[728,0,1039,8,"onMapReady"],[728,8,1039,8,"onMapReady"],[728,18,1039,18],[728,20,1039,20],[728,24,1037,18],[729,0,1040,8,"handlePanDrag"],[729,8,1040,8,"handlePanDrag"],[729,21,1040,21],[729,23,1040,23],[730,0,1037,18],[731,0,1036,50],[731,5,1036,4],[731,6,1034,2],[732,0,1043,1],[732,3,1032,0],[732,9,1043,7],[733,0,1045,2,"AIRMapLite"],[733,4,1045,2,"AIRMapLite"],[733,14,1045,12],[733,17,1046,4,"NativeModules"],[733,44,1046,18,"UIManager"],[733,53,1046,4],[733,54,1046,28,"getViewManagerConfig"],[733,74,1046,4],[733,75,1046,49],[733,87,1046,4],[733,92,1047,4],[733,133,1047,27],[733,145,1047,4],[733,147,1047,41,"MapView"],[733,154,1047,4],[733,156,1047,50],[734,0,1048,6,"nativeOnly"],[734,6,1048,6,"nativeOnly"],[734,16,1048,16],[734,18,1048,18],[735,0,1049,8,"onChange"],[735,8,1049,8,"onChange"],[735,16,1049,16],[735,18,1049,18],[735,22,1048,18],[736,0,1050,8,"onMapReady"],[736,8,1050,8,"onMapReady"],[736,18,1050,18],[736,20,1050,20],[736,24,1048,18],[737,0,1051,8,"handlePanDrag"],[737,8,1051,8,"handlePanDrag"],[737,21,1051,21],[737,23,1051,23],[738,0,1048,18],[739,0,1047,50],[739,5,1047,4],[739,6,1045,2],[740,0,1054,1],[742,0,1056,7],[742,6,1056,13,"Animated"],[742,14,1056,21],[742,17,1056,24,"RNAnimated"],[742,39,1056,35,"createAnimatedComponent"],[742,62,1056,24],[742,63,1056,59,"MapView"],[742,70,1056,24],[742,71,1056,7],[746,0,1058,7],[746,6,1058,13,"ProviderPropType"],[746,22,1058,29],[746,25,1058,32,"PropTypes"],[746,44,1058,42,"oneOf"],[746,49,1058,32],[746,50,1059,2,"Object"],[746,56,1059,8],[746,57,1059,9,"values"],[746,63,1059,2],[746,64,1059,16,"ProviderConstants"],[746,81,1059,2],[746,82,1058,32],[746,83,1058,7],[749,0,1070,0,"MapView"],[749,2,1070,0,"MapView"],[749,9,1070,7],[749,10,1070,8,"Marker"],[749,16,1070,0],[749,19,1070,17,"MapMarker"],[749,37,1070,0],[750,0,1071,0,"MapView"],[750,2,1071,0,"MapView"],[750,9,1071,7],[750,10,1071,8,"Polyline"],[750,18,1071,0],[750,21,1071,19,"MapPolyline"],[750,41,1071,0],[751,0,1072,0,"MapView"],[751,2,1072,0,"MapView"],[751,9,1072,7],[751,10,1072,8,"Polygon"],[751,17,1072,0],[751,20,1072,18,"MapPolygon"],[751,39,1072,0],[752,0,1073,0,"MapView"],[752,2,1073,0,"MapView"],[752,9,1073,7],[752,10,1073,8,"Circle"],[752,16,1073,0],[752,19,1073,17,"MapCircle"],[752,37,1073,0],[753,0,1074,0,"MapView"],[753,2,1074,0,"MapView"],[753,9,1074,7],[753,10,1074,8,"UrlTile"],[753,17,1074,0],[753,20,1074,18,"MapUrlTile"],[753,39,1074,0],[754,0,1075,0,"MapView"],[754,2,1075,0,"MapView"],[754,9,1075,7],[754,10,1075,8,"MapWMSTile"],[754,20,1075,0],[754,23,1075,21,"MapWMSTile"],[754,42,1075,0],[755,0,1076,0,"MapView"],[755,2,1076,0,"MapView"],[755,9,1076,7],[755,10,1076,8,"LocalTile"],[755,19,1076,0],[755,22,1076,20,"MapLocalTile"],[755,43,1076,0],[756,0,1077,0,"MapView"],[756,2,1077,0,"MapView"],[756,9,1077,7],[756,10,1077,8,"Overlay"],[756,17,1077,0],[756,20,1077,18,"MapOverlay"],[756,39,1077,0],[757,0,1078,0,"MapView"],[757,2,1078,0,"MapView"],[757,9,1078,7],[757,10,1078,8,"Callout"],[757,17,1078,0],[757,20,1078,18,"MapCallout"],[757,39,1078,0],[758,0,1079,0,"MapView"],[758,2,1079,0,"MapView"],[758,9,1079,7],[758,10,1079,8,"CalloutSubview"],[758,24,1079,0],[758,27,1079,25,"MapCalloutSubview"],[758,53,1079,0],[759,0,1080,0],[759,25,1080,14,"MapView"],[759,32,1080,0],[759,34,1080,23,"ProviderConstants"],[759,51,1080,0],[760,0,1081,0,"MapView"],[760,2,1081,0,"MapView"],[760,9,1081,7],[760,10,1081,8,"ProviderPropType"],[760,26,1081,0],[760,29,1081,27,"ProviderPropType"],[760,45,1081,0],[761,0,1083,0,"MapView"],[761,2,1083,0,"MapView"],[761,9,1083,7],[761,10,1083,8,"Animated"],[761,18,1083,0],[761,21,1083,19,"Animated"],[761,29,1083,0],[762,0,1084,0,"MapView"],[762,2,1084,0,"MapView"],[762,9,1084,7],[762,10,1084,8,"AnimatedRegion"],[762,24,1084,0],[762,27,1084,25,"AnimatedRegion"],[762,50,1084,0],[763,18,1086,15,"MapView"],[763,25]]},"type":"js/module"}]}